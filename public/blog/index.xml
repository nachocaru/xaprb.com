<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Blogs on Xaprb </title>
      <generator uri="https://hugo.spf13.com">Hugo</generator>
    <link>http://www.xaprb.com/blog/index.xml/</link>
    
    
    
    <updated>Sat, 24 Jan 2015 00:00:00 UTC</updated>
    
    <item>
      <title>The Ultimate Bargain Coffee Kit</title>
      <link>http://www.xaprb.com/blog/2015/01/24/ultimate-bargain-coffee-kit/</link>
      <pubDate>Sat, 24 Jan 2015 00:00:00 UTC</pubDate>
      
      <guid>http://www.xaprb.com/blog/2015/01/24/ultimate-bargain-coffee-kit/</guid>
      <description>

&lt;p&gt;I&amp;rsquo;ve started drinking coffee over the last few years. Like most things I&amp;rsquo;ve
picked up relatively late in life, I am kind of a snob, in that I want good
coffee but I want it to be quick, easy, and cheap. This post is about the gear
I&amp;rsquo;ve settled on for making my morning cup.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/media/2015/01/coffee.jpg&#34; alt=&#34;coffee&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;There&amp;rsquo;s a wide range of gear you could build up, from super-cheap to really
nice, and in general the more expensive, the better coffee you&amp;rsquo;ll make. I am a
middle-of-the-road, Pareto Principle kind of guy. I want coffee that&amp;rsquo;s 80% or
more as good as the best coffee from experts, at a fraction of the cost and
effort. Here&amp;rsquo;s my list of &amp;ldquo;best value and balance&amp;rdquo; gear. As a bonus, some of my
gear items are things I already had (kettle, Brita pitcher) so
my coffee habit really didn&amp;rsquo;t entail adding much more equipment.&lt;/p&gt;

&lt;h3 id=&#34;toc_0&#34;&gt;Whole-Bean Coffee&lt;/h3&gt;

&lt;p&gt;Whole-bean coffee has to be ground before making it. You can read lots of
details online about why grinding just before brewing makes better coffee. I
notice a difference, and that&amp;rsquo;s enough for me.&lt;/p&gt;

&lt;p&gt;My personal preference is to stick with something pretty simple and not all that
expensive, somewhere in the range of $6.00 to $8.00 for a bag or can.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m currently enjoying several of the blends from Trader Joe&amp;rsquo;s. My wife likes
Central American beans, and I like those too; I once visited a coffee farm on
the slopes of a mountain in Costa Rica so it evokes fond memories. I also enjoy
Arabica. I like a medium or dark roast most of the time, but there&amp;rsquo;s an infinite
variety of beans, blends and roasts, and various combinations of them are better
or worse.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/media/2015/01/gevalia.jpg&#34; alt=&#34;gevalia&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Another decent middle-of-the-road brand is Gevalia, which tends towards the
better-quality range of not-too-expensive coffee. As a bonus, many of &lt;a href=&#34;www.amazon.com/Gevalia-French-Roast-Ground-Coffee/dp/B00MBEKH6U/?tag=xaprb-20&#34;&gt;their
roasts&lt;/a&gt;
come pre-ground. Sometimes the convenience of pre-ground is just what I need.&lt;/p&gt;

&lt;h3 id=&#34;toc_1&#34;&gt;Coffee Grinder&lt;/h3&gt;

&lt;p&gt;There are two kinds of grinders: conical burr, and ones that aren&amp;rsquo;t worth using.
The conical burr grinders produce a better, more uniform grind, without all
kinds of smashing and splattering of oils and other carnage and destruction.&lt;/p&gt;

&lt;p&gt;The only problem is most conical burr grinders are several hundred bucks. There
is a bargain grinder, though, and it&amp;rsquo;s awesome. It&amp;rsquo;s the &lt;a href=&#34;http://www.amazon.com/Hario-Ceramic-Skerton-Storage-Capacity/dp/B001802PIQ/?tag=xaprb-20&#34;&gt;Hario
Skerton&lt;/a&gt;, a Japanese hand-grinder
that fits on top of a little jar. It&amp;rsquo;s easy to use and produces a good quality
grind, it&amp;rsquo;s durable and doesn&amp;rsquo;t break, &lt;em&gt;and it is not expensive at all.&lt;/em&gt; The current price on Amazon is $32, and
there&amp;rsquo;s a rebranded version of it at a similar price. One or the other is
sometimes cheaper or more expensive.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/media/2015/01/hario.jpg&#34; alt=&#34;hario&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;The catch? If you set it to a very fine blend, it&amp;rsquo;ll take a while to grind.
Some people also complain about having to grind by hand. I honestly do not know
why. It is easy to grind, especially if you hold it in the air instead of trying
to hold it still on a counter-top, and enough coffee for a cup or two takes less
time to grind than the water takes to heat up.&lt;/p&gt;

&lt;h3 id=&#34;toc_2&#34;&gt;Water Kettle&lt;/h3&gt;

&lt;p&gt;Heating water properly is a big part of a good cup of coffee. If you just boil
water on the stove, you&amp;rsquo;re going to get a nasty, bitter cup for sure. Your water
needs to be the right temperature; it varies by roast and personal taste.&lt;/p&gt;

&lt;p&gt;You can buy a simple thermometer, but in my opinion the easiest and cheapest way
to get water the right temperature is to use a programmable electric kettle. The
one I like, and have used several times a day for years (I drink one small cup
of coffee in the morning but many cups of tea all day long) is the &lt;a href=&#34;http://www.amazon.com/Oster-BVST-EK5967-NP-Digital-Temperature-1-7-Liter/dp/B00BLR03I0/?tag=xaprb-20&#34;&gt;Oster
BVST-EK5967-NP&lt;/a&gt;.
It&amp;rsquo;s $30 on Amazon.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/media/2015/01/oster.jpg&#34; alt=&#34;oster&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;If you click through the link and look at the reviews, you&amp;rsquo;ll see everyone
complaining about it being cheap and failing after a short while. I don&amp;rsquo;t know
what the deal with that is. I had a friend who got scared off by the reviews,
bought a highly-rated one instead, and I&amp;rsquo;ve used it a ton. It is awful compared
to the Oster&amp;mdash;doesn&amp;rsquo;t turn off properly, doesn&amp;rsquo;t heat quickly, doesn&amp;rsquo;t alarm
when done, and doesn&amp;rsquo;t have a temperature control. The Oster has been great
for me. It&amp;rsquo;s possible that the Oster has changed since I got mine, though, and
it may indeed be lower quality now.&lt;/p&gt;

&lt;p&gt;I heat the water to 190&amp;deg; F for most of my coffee. It&amp;rsquo;s easy with this
kettle: press twice on the minus button, press Start. About a minute later it&amp;rsquo;ll
be done.&lt;/p&gt;

&lt;p&gt;As a bonus, using an electric kettle like this is much faster than a pot on the
stove, and I wouldn&amp;rsquo;t be surprised if it uses less electricity.&lt;/p&gt;

&lt;h3 id=&#34;toc_3&#34;&gt;Water Filter&lt;/h3&gt;

&lt;p&gt;Tap water, with all of its nasty chemicals and minerals, definitely doesn&amp;rsquo;t make as good a
cup of coffee as filtered water. I use an ordinary
&lt;a href=&#34;http://www.amazon.com/Brita-10-Cup-Everyday-Filter-Pitcher/dp/B004GNGID0/?tag=xaprb-20&#34;&gt;Brita&lt;/a&gt;
pitcher.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/media/2015/01/brita.jpg&#34; alt=&#34;brita&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;If you want to know how much difference this really makes, try the little Brita
test: make two cups of tea, one with tap water and one with Brita water, in
transparent glasses. Just any standard tea will do. If your tap water is
anything like mine, you&amp;rsquo;ll be shocked by the difference in appearance alone. The
only downside to using a Brita filter is that you need to remember to change it
every so often.&lt;/p&gt;

&lt;h3 id=&#34;toc_4&#34;&gt;Coffee Maker&lt;/h3&gt;

&lt;p&gt;There are about as many ways to make coffee as there are people. If I could
drink my dream coffee every day, I&amp;rsquo;d drink traditional Espresso. However, making
Espresso takes a lot of equipment that&amp;rsquo;s usually &lt;em&gt;very&lt;/em&gt; expensive, and it is
delicate and finicky. So many things have to be done &amp;ldquo;just right.&amp;rdquo;&lt;/p&gt;

&lt;p&gt;My compromise is
&lt;a href=&#34;http://www.amazon.com/Aeropress-Coffee-and-Espresso-Maker/dp/B0047BIWSK/?tag=xaprb-20&#34;&gt;Aeropress&lt;/a&gt;. It&amp;rsquo;s
not really a &amp;ldquo;compromise&amp;rdquo; since I think it&amp;rsquo;s great coffee by any standard.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/media/2015/01/aeropress.jpg&#34; alt=&#34;aeropress&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Aeropress coffee is about as close to an Espresso as
you can get without making real Espresso. The emphasis is on the coffee&amp;rsquo;s
flavors&amp;mdash;the oils, aromas, and organic compounds&amp;mdash;and not just bitterness,
which is all I taste with most &amp;ldquo;standard&amp;rdquo; American coffee.&lt;/p&gt;

&lt;p&gt;There is more, too. A cup of Aeropress coffee is super-quick and simple to make!
I only use half of the parts that you see in the picture above: the press,
scoop, and mixer. I have no use for the funnel or the filter dispenser.&lt;/p&gt;

&lt;p&gt;And, if you do like a larger serving and a more traditional American taste (less
strong), just add hot water to your Aeropress Espresso and you&amp;rsquo;re there.
Aeropress is also small enough to take with you when you travel. No more
disgusting coffee from the hotel lobby.&lt;/p&gt;

&lt;p&gt;There&amp;rsquo;s a lot of science behind why Aeropress coffee is not bitter and tastes
better. You can read about it on the
&lt;a href=&#34;http://www.amazon.com/Aeropress-Coffee-and-Espresso-Maker/dp/B0047BIWSK/?tag=xaprb-20&#34;&gt;Amazon page&lt;/a&gt;.
It also comes with good instructions that explain the correct temperature for
your roast, how long to mix and press, and so on.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s also very cheap. The Aeropress comes in at $25 or so, far less than any
other decent coffee maker I&amp;rsquo;ve found, and filters are super-cheap (and reusable
3-5 times too).&lt;/p&gt;

&lt;p&gt;I have tried drip, percolator, French Press, pour-over, and a bunch of other
coffee techniques. Like I said, Aeropress is easily the best coffee given the
ease and price.&lt;/p&gt;

&lt;h3 id=&#34;toc_5&#34;&gt;Optional: Nice Mugs&lt;/h3&gt;

&lt;p&gt;Partially due to the Aeropress&amp;rsquo;s size, and partially because I like my mug to be
a little bit small and nicely decorated, I bought the following stack of 4 mugs
with a wire stand
from World Market. The Aeropress fits just right on top of them. They&amp;rsquo;re just a
bit smaller than most of the mugs I&amp;rsquo;m used to.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/media/2015/01/mugs.jpg&#34; alt=&#34;mugs&#34; /&gt;
&lt;/p&gt;

&lt;h3 id=&#34;toc_6&#34;&gt;Bonus: Nespresso Milk Frother For Lattes and Mochas&lt;/h3&gt;

&lt;p&gt;If you like lattes and mochas and the like (which I do&amp;mdash;&lt;a href=&#34;https://vividcortex.com/blog/2014/11/05/make-your-own-pumpkin-spice-latte/&#34;&gt;see my pumpkin spice latte
recipe&lt;/a&gt;), then you might like the
&lt;a href=&#34;http://www.amazon.com/Nespresso-Aeroccino-Plus-Milk-Frother/dp/B001UHZAYS/?tag=xaprb-20&#34;&gt;Nespresso Aeroccino Plus Milk Frother&lt;/a&gt;.
Years ago I got one of these for my wife as part of a Nespresso kit, and I still use it.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/media/2015/01/aeroccino.jpg&#34; alt=&#34;aeroccino&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;With whole milk, or even 2% milk, it does a great job of producing a nice frothy
batch in no time. Drop in some chocolate syrup before foaming (Trader Joe&amp;rsquo;s and Whole Foods
both have good-quality organic chocolate syrup) and you&amp;rsquo;ve got a pretty decent
mocha. The frother is easy to use, fast, and easy to clean.&lt;/p&gt;

&lt;p&gt;On that subject, I do like Nespresso too. It makes a pretty good Espresso, all
things considered, though not as good as a &amp;ldquo;real&amp;rdquo; one by any stretch. My gripe
with it, and all similar capsule coffee makers such as Keurigs, is the cost. You
can drop a weekend getaway&amp;rsquo;s worth on an order of Nespresso without blinking,
and it will be gone before you know it! By contrast, my Aeropress with a single
scoop, hand-ground, is probably 20 times cheaper per cup.&lt;/p&gt;

&lt;h3 id=&#34;toc_7&#34;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;So there you have it. My ideal coffee (which may not be yours) at the moment
turns out to go like this:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Pour some water from the Brita into the kettle, adjust the temp, and heat&lt;/li&gt;
&lt;li&gt;Put one scoop of beans from the container into the Hario and grind it&lt;/li&gt;
&lt;li&gt;Set the Aeropress on top of the mug, pour, mix 10 seconds, press 10 seconds&lt;/li&gt;
&lt;li&gt;Wait a few moments for the coffee to cool enough to enjoy properly&lt;/li&gt;
&lt;li&gt;Sluuurrrrrp&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All the rest is gravy. I&amp;rsquo;ve included some decidedly non-essential items in this
post, because I enjoy them and they&amp;rsquo;re part of my overall experience, but you
can certainly get by with much less. For example, if I wanted to be really
minimalistic (as I am when traveling) I can make do with just the Aeropress and
a bag of Gevalia, pre-ground. Voila.&lt;/p&gt;

&lt;p&gt;I hope you enjoy your coffee. Let me know your thoughts and ideas!&lt;/p&gt;

&lt;p&gt;Image credits:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.flickr.com/photos/zachinglis/5507648594/&#34;&gt;coffee&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Installing CyanogenMod on the Barnes and Noble Nook HD&#43;</title>
      <link>http://www.xaprb.com/blog/2015/01/19/install-cyanogenmod-nook-hdplus/</link>
      <pubDate>Mon, 19 Jan 2015 00:00:00 UTC</pubDate>
      
      <guid>http://www.xaprb.com/blog/2015/01/19/install-cyanogenmod-nook-hdplus/</guid>
      <description>

&lt;p&gt;I &lt;a href=&#34;/blog/2014/03/01/barnes-noble-nook-hd/&#34;&gt;wrote previously&lt;/a&gt; about how much I
was using and enjoying my 9-inch Barnes and Noble Nook HD+. I&amp;rsquo;m still using and
enjoying it, but a few of the things I mentioned in that article&amp;mdash;the useless home
screen, the schizophrenic updates from two app stores at once, and so
on&amp;mdash;started to annoy me. I started to fantasize about installing a clean,
uncluttered Android operating system on it instead of using the Nook operating
system. The best-known general-purpose Android OS is CyanogenMod, and that&amp;rsquo;s
what I was thinking about.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/media/2015/01/cyanogenmod.jpg&#34; alt=&#34;cyanogenmod&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Last time I did this, I didn&amp;rsquo;t like the result. I&amp;rsquo;ll explain why, then move on
to show you how to install CyanogenMod easily on the Nook HD+ and talk about the
results. (I&amp;rsquo;m very happy thus far).&lt;/p&gt;

&lt;h3 id=&#34;toc_0&#34;&gt;It Didn&amp;rsquo;t End Well Last Time&lt;/h3&gt;

&lt;p&gt;I never wrote about this, but when I &lt;a href=&#34;/blog/2011/06/04/using-the-nook-color-as-a-full-featured-android-tablet/&#34;&gt;previously had a 7-inch Nook
Color&lt;/a&gt;,
and installed CyanogenMod on it, I was happy at first but after a while it
wasn&amp;rsquo;t what I wanted anymore.&lt;/p&gt;

&lt;p&gt;I had a number of issues with things like Netflix not working, exiting with an
error about being unsupported on this device (though clearly it wasn&amp;rsquo;t the
device, since the stock Nook OS had Netflix), various apps not working well, and
so on. The base OS seemed to work well enough, but after trying to install some
more apps, I found some problems. Combine that with the not-large-enough size
and the short battery life, and I just eventually sold it on eBay. I tried
wiping it and reinstalling stock Nook OS, but for some reason I must have not
backed up the stock ROM correctly, and it didn&amp;rsquo;t really function right.&lt;/p&gt;

&lt;p&gt;So I was very hesitant to go through the same experience again with my new Nook.
I like the hardware and user experience of the new one. It&amp;rsquo;s light, it&amp;rsquo;s a good
size, it has great battery life, and it&amp;rsquo;s powerful enough (mostly). What if I
ended up with a glitchy OS again, or problems with apps?&lt;/p&gt;

&lt;h3 id=&#34;toc_1&#34;&gt;Trying Less Drastic Measures&lt;/h3&gt;

&lt;p&gt;To mitigate this risk, first I tried a couple of alternatives. One was to
install a custom home screen via the Nova Launcher app, instead of the Nook home
screen. This let me get rid of the large, ugly area where Nook wanted to show me
things I didn&amp;rsquo;t want to buy. Combined with a nice sharp Zen-rocks-and-a-flower
wallpaper, it felt like a much nicer user experience.&lt;/p&gt;

&lt;p&gt;The lock screen was still ugly, though. I tried disabling that and replacing it
with another one from the app store, but that never worked very well; I was
unable to really disable the Nook&amp;rsquo;s lock screen, and the new lock screen didn&amp;rsquo;t
work right. The default Nook lock screen is really pretty embarrassing. There&amp;rsquo;s
a high-resolution screen on the device and the lock screen looks like it was
made for a low-res device. I&amp;rsquo;m nitpicking, but my point is you can skin some of
the Nook, but not all of it, so the user interface still feels cheap.&lt;/p&gt;

&lt;p&gt;There were other minor problems&amp;mdash;clearly the Nook OS is based on an old version
of Android. Fast task switching (and task killing) aren&amp;rsquo;t possible.  There&amp;rsquo;s
also lots of little annoyances like having apps pop up messages &amp;ldquo;Syncing Your
Library&amp;rdquo; while watching a movie.&lt;/p&gt;

&lt;p&gt;Two major problems remained. One was the bloatware installed on the Nook,
including the Nook app store that irritatingly kept overwriting versions of apps
installed from the Google Play store. More serious, though, was the app
instability. Gmail was unusable for a couple of weeks while some bug worked its
way through the release process. Gmail is a big part of why I have the tablet to
begin with. And even after it became usable again, it would crash at random
times. I&amp;rsquo;d be watching a movie and see a pop-up, &amp;ldquo;Unfortunately, Gmail has
stopped.&amp;rdquo; I&amp;rsquo;d open the Chrome browser and it would lock up the tablet for 30
seconds and then kill itself. I am not sure if I&amp;rsquo;m right, but I blame this on
the Nook app store and/or the ancient Nook OS, not on Gmail.&lt;/p&gt;

&lt;p&gt;Another problem was performance. I installed &lt;a href=&#34;http://www.monumentvalleygame.com/&#34;&gt;Monument
Valley&lt;/a&gt; and I love, love, &lt;em&gt;love&lt;/em&gt; it. It&amp;rsquo;s
just amazing. But the Nook didn&amp;rsquo;t seem quite fast enough. Graphics
stuttered, and there were visual glitches and other artifacts.&lt;/p&gt;

&lt;p&gt;There were some other things&amp;mdash;inability to encrypt the whole device, for
example.&lt;/p&gt;

&lt;p&gt;So although the skinned device was a lot nicer, it was still starting to wear on
me. And I read online that CyanogenMod solved these problems: clean,
uncluttered; latest version of Android; lots of performance improvements; safety
and privacy improvements over and above even Google&amp;rsquo;s open-source Android
releases; ability to encrypt the whole device.&lt;/p&gt;

&lt;p&gt;So I decided to go for it and install CyanogenMod! But not on &lt;strong&gt;my&lt;/strong&gt; device. I
didn&amp;rsquo;t want to take the chance of wiping it and ending up wishing I hadn&amp;rsquo;t.
When I bought my first Nook HD+ 9-inch tablet, they were selling for $175 or so,
and $100 or so refurbished on eBay. Now they&amp;rsquo;re discontinued, and eBay is the
best place to buy one. I got a practically brand-new one for $109 including
shipping. &lt;strong&gt;This&lt;/strong&gt; device would be my sandbox. And if I liked it, well, I have a
gift idea for what to do with the extra one.&lt;/p&gt;

&lt;h3 id=&#34;toc_2&#34;&gt;Installing CyanogenMod On The Nook HD+ 9-Inch&lt;/h3&gt;

&lt;p&gt;Installing CyanogenMod is really quite easy. The online forums are
super-confusing, though. That&amp;rsquo;s the hard part. All the instructions seem to
cater to someone who already knows what they&amp;rsquo;re doing, or they&amp;rsquo;re written in a
spastic style that is impossible to understand. In many cases they just plain
don&amp;rsquo;t work; they are written by people who are speculating/extrapolating and
haven&amp;rsquo;t done it themselves.&lt;/p&gt;

&lt;p&gt;So I&amp;rsquo;m going to walk you through it plain and simple. I&amp;rsquo;ll follow the
instructions on the &lt;a href=&#34;http://wiki.cyanogenmod.org/w/Ovation_Info&#34;&gt;CyanogenMod Wiki for the Nook
HD+&lt;/a&gt; and the corresponding
&lt;a href=&#34;http://wiki.cyanogenmod.org/w/Install_CM_for_ovation&#34;&gt;installation
instructions&lt;/a&gt; with some
clarifications and extra details. A lot is missing or assumed there.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What To Know&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Some terminology, in case you encounter it on the Internet:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;CM = CyanogenMod, the operating system you&amp;rsquo;ll install on the tablet&lt;/li&gt;
&lt;li&gt;CWM = ClockworkMod, a &amp;ldquo;recovery&amp;rdquo; system for installing new software&lt;/li&gt;
&lt;li&gt;Gapps = Google Apps, the Google-branded Android ecosystem apps including the Google Play store (not at all related to Google&amp;rsquo;s office and productivity suite for businesses)&lt;/li&gt;
&lt;li&gt;adb = the Android debug bridge, software you&amp;rsquo;ll use to communicate with the Nook when it is booted into recovery mode&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;What You&amp;rsquo;ll Do&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You&amp;rsquo;re going to follow these steps:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Download CyanogenMod, Google Apps, and adb&lt;/li&gt;
&lt;li&gt;Download ClockworkMod and make a bootable SD card with it&lt;/li&gt;
&lt;li&gt;Boot the Nook to the ClockworkMod recovery operating system&lt;/li&gt;
&lt;li&gt;Use the Android Debugger to transfer CyanogenMod and Google Apps to the Nook&lt;/li&gt;
&lt;li&gt;Use ClockworkMod to install these two onto the Nook&lt;/li&gt;
&lt;li&gt;You&amp;rsquo;re done&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;What You&amp;rsquo;ll Need&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A computer with USB and an SD card reader&lt;/li&gt;
&lt;li&gt;A micro-SD card and an adapter for using it in a full-size SD card reader. Mine is 2GB, but you won&amp;rsquo;t go wrong if you use a larger one&lt;/li&gt;
&lt;li&gt;A fully charged Nook&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;What To Download&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You need to download some things before you start. Don&amp;rsquo;t unzip these files, just
download them. Don&amp;rsquo;t put them onto the SD card. Just keep them on your computer.&lt;/p&gt;

&lt;p&gt;CyanogenMod: the Nook HD+ is code-named &amp;ldquo;ovation&amp;rdquo;. Get the &lt;a href=&#34;http://download.cyanogenmod.org/?type=snapshot&amp;amp;device=ovation&#34;&gt;latest ovation
snapshot build&lt;/a&gt;
and download it to your computer. Make a note of the CyanogenMod version you
download. I downloaded the following file just now:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cm-11-20141112-SNAPSHOT-M12-ovation.zip
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This is CyanogenMod version 11.&lt;/p&gt;

&lt;p&gt;Google Apps: you&amp;rsquo;ll want the proprietary Google Apps, which will give you access
to the Google Play store and so on. Download them from this link:
&lt;a href=&#34;http://wiki.cyanogenmod.org/w/Gapps&#34;&gt;http://wiki.cyanogenmod.org/w/Gapps&lt;/a&gt; Choose the correct version of them for your
OS, in my case for CyanogenMod (CM) version 11. I downloaded this file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gapps-kk-20140606-signed.zip
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ClockworkMod: any version that is built for the Nook HD+. This is the sketchiest
part of the process, because you typically have to hunt around for something
built by someone and just linked into a forum thread. You don&amp;rsquo;t need the latest
and greatest, you just need something that&amp;rsquo;ll boot up from a micro SD card. I
downloaded &lt;code&gt;NookHDplus-CWM-6046-for-internal-memory-rev0-(07-13-14).zip&lt;/code&gt; from
&lt;a href=&#34;http://forum.xda-developers.com/showpost.php?p=42406126&amp;amp;postcount=7&#34;&gt;this XDA
thread&lt;/a&gt; and
found it to work fine. Download this to your computer as well.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Making A Bootable Micro SD Card&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;For some reason, the online instructions all do this simple task in bizarre
ways. I think a part of that may be due to people using Windows, which doesn&amp;rsquo;t
have the &lt;code&gt;dd&lt;/code&gt; command. If you use Windows, you may need to download a bunch of
stuff as instructed on the XDA thread I just linked to. But if you use a
Unix-based OS, you can just put your SD card into your computer and copy the
recovery image onto it with &lt;code&gt;dd&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;You&amp;rsquo;ll need to make sure the SD card device is unmounted, and figure out what the
device&amp;rsquo;s Unix path is. I assume you can do that without my help. On my Mac, the
device was &lt;code&gt;/dev/disk2&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Then, unzip the ClockworkMod file, and &lt;code&gt;dd&lt;/code&gt; the &lt;code&gt;recovery.img&lt;/code&gt; onto the device, e.g.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo dd bs=4m if=recovery.img of=/dev/your/device/here
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will take a few minutes to complete.&lt;/p&gt;

&lt;p&gt;Now you have a card that you can put into the Nook&amp;rsquo;s card reader and boot it up.
Instead of booting up to the Nook OS, it will boot up to the &amp;ldquo;recovery mode&amp;rdquo;
operating system on the card. Try it. You should see the Nook splash screen for
a second or two, then a Cyanoboot logo will appear:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/media/2015/01/cyanoboot.png&#34; alt=&#34;cyanoboot&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;A moment later you should see a menu with options to do some basic operations&amp;mdash;reboot,
install, backup, and so on. If this doesn&amp;rsquo;t work, you&amp;rsquo;ll need to
re-read, perhaps read online info&amp;hellip; keep working until you get it. It worked
the first time for me.&lt;/p&gt;

&lt;p&gt;Use the volume keys to highlight the desired menu item, the Nook&amp;rsquo;s home button (the
N button) to select/OK the highlighted item, and the power button to go back.&lt;/p&gt;

&lt;p&gt;Note that, instead of following the confused and contradictory instructions
online about copying various files to this bootable SD card, and whether that
will or won&amp;rsquo;t work and in what order you have to do it, we are only putting the
&lt;code&gt;recovery.img&lt;/code&gt; file onto it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Make A Backup&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Once you have the Nook booted into recovery mode on the SD card, you need to
make a backup. Use the volume keys to go to &amp;ldquo;backup and restore&amp;rdquo; and choose
&amp;ldquo;backup to /sdcard&amp;rdquo; and let this run. It may take a while. This will be your
backup in case you want to restore the stock Nook OS and all your data.&lt;/p&gt;

&lt;p&gt;While this is working, move on to the next step.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Install the Android Debug Bridge&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The Android debug bridge (adb) software lets you connect your computer to the Nook
when it&amp;rsquo;s booted into recovery mode. We&amp;rsquo;ll use it to copy the necessary files to
the Nook&amp;rsquo;s internal storage and then to install these.&lt;/p&gt;

&lt;p&gt;Follow the instructions on the &lt;a href=&#34;http://wiki.cyanogenmod.org/w/Adb&#34;&gt;CyanogenMod
Wiki&lt;/a&gt; to install adb. Please read the
instructions carefully. You basically need to download some software, unzip it,
execute it, and in the menu that appears, select a fairly minimal set of tools
to install. The initial install isn&amp;rsquo;t the full suite of software, it&amp;rsquo;s just an
installer you use to get the stuff you really need.&lt;/p&gt;

&lt;p&gt;You don&amp;rsquo;t need to really &amp;ldquo;install&amp;rdquo; the software on your computer, it&amp;rsquo;s more a
matter of downloading. For example,
I did not modify my computer&amp;rsquo;s &lt;code&gt;$PATH&lt;/code&gt; variable to put &lt;code&gt;adb&lt;/code&gt; into my path. I
just opened a terminal and executed &lt;code&gt;./platform-tools/adb &amp;lt;options&amp;gt;&lt;/code&gt; to do what
I needed. Afterwards I deleted the directory from my downloads folder and my
computer is clean and unaltered, with nothing &amp;ldquo;installed.&amp;rdquo;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Wipe The Nook&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Presumably your Nook&amp;rsquo;s backup has finished now. Next,
you have to completely reset the Nook. You can&amp;rsquo;t install CyanogenMod onto a Nook
that hasn&amp;rsquo;t been reset. I don&amp;rsquo;t quite understand why, but the installation
process failed for me (and others online) until a factory reset.&lt;/p&gt;

&lt;p&gt;Don&amp;rsquo;t use the factory reset in the Nook itself. Use the reset function built
into your bootable ClockworkMod disk. Select &lt;strong&gt;wipe data/factory reset&lt;/strong&gt; and let
it run. It should only take a moment.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Mount The Nook&amp;rsquo;s Internal Storage&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You have to mount the Nook&amp;rsquo;s internal storage (often referred to as &amp;ldquo;sdcard&amp;rdquo;
although it is not really a card) so you can copy the files you&amp;rsquo;re going to
install. Navigate back to the main menu and select &lt;strong&gt;mounts and storage&lt;/strong&gt;, then
&lt;strong&gt;mount /data&lt;/strong&gt;. For some reason ClockworkMod refers to it under different
names, but this is the correct thing to mount on the Nook HD+.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Copy CyanogenMod and Google Apps to the Nook&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There are a couple ways to install software onto the Nook. I tried the
&amp;ldquo;sideload&amp;rdquo; method mentioned in the CyanogenMod wiki&amp;rsquo;s instructions, but it
didn&amp;rsquo;t work. The &amp;ldquo;push and install&amp;rdquo; method worked, so that&amp;rsquo;s what I&amp;rsquo;ll document
here.&lt;/p&gt;

&lt;p&gt;Remove the USB cable from the Nook power charger and plug it into your computer.
Your computer is now connected via USB to the Nook.&lt;/p&gt;

&lt;p&gt;Now you can use the &lt;code&gt;adb push&lt;/code&gt; tool to copy the downloaded software from your
computer to the Nook, and tell the Nook to store the zip files in &lt;code&gt;/sdcard&lt;/code&gt;/,
which is the storage you just mounted on the Nook. In my case, it looked like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;~/Downloads/android-sdk-macosx/platform-tools/adb push ~/Downloads/cm-11-20141112-SNAPSHOT-M12-ovation.zip /sdcard/
~/Downloads/android-sdk-macosx/platform-tools/adb push ~/Downloads/gapps-kk-20140606-signed.zip /sdcard/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;These take a few moments to transfer. When I did it, they took about 55 and 40 seconds,
respectively.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Install The New Software&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Now you&amp;rsquo;re ready to take the plunge! On the Nook, use the power button to return
to the main menu, and select &lt;strong&gt;install zip&lt;/strong&gt;, then &lt;strong&gt;install zip from /sdcard&lt;/strong&gt;.
Select the CyanogenMod zip file and install it, then the Google Apps (gapps) zip
file and install that.&lt;/p&gt;

&lt;p&gt;If you don&amp;rsquo;t see the files: reboot the Nook and try the transfer again. I have
gone through this process a couple of times and had the transfer appear to
succeed (but the files never appeared in the ClockworkMod menu), then when I
rebooted the Nook and tried again, it worked fine. I believe it was a problem
mounting the &lt;code&gt;/sdcard&lt;/code&gt; directory.&lt;/p&gt;

&lt;p&gt;After installing: Reboot. You&amp;rsquo;re done. First boot will take a minute or two;
you&amp;rsquo;ll be presented with a setup menu after that. Subsequent boots will take about 20 seconds in my experience.&lt;/p&gt;

&lt;h3 id=&#34;toc_3&#34;&gt;Results&lt;/h3&gt;

&lt;p&gt;The process of installing CyanogenMod onto an Android device is a bit like
buying a computer with Windows and replacing it with Linux.&lt;/p&gt;

&lt;p&gt;Thus far, I have noticed the following results from using my freshly installed
CyanogenMod operating system:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;It is faster and graphics are noticeably better. No glitches or visual
artifacts in Monument Valley, for example.&lt;/li&gt;
&lt;li&gt;All the Nook-specific annoyances are gone, naturally.&lt;/li&gt;
&lt;li&gt;Hulu&amp;rsquo;s app wouldn&amp;rsquo;t install, saying &amp;ldquo;Your device isn&amp;rsquo;t compatible with this
version.&amp;rdquo; Too bad; with the stock Nook OS, it installed OK. Not that I ever
used it, but it installed.&lt;/li&gt;
&lt;li&gt;No problems with Netflix, Spotify, Pandora, and lots and lots of other apps.&lt;/li&gt;
&lt;li&gt;I discovered things I didn&amp;rsquo;t even know about my Nook&amp;rsquo;s hardware. For example,
I thought it didn&amp;rsquo;t have a microphone. With the newer version of Android
that&amp;rsquo;s installed now, the Google Now &amp;ldquo;OK Google&amp;hellip;&amp;rdquo; instructions work fine.
It hears and recognizes my voice! Mind blown!&lt;/li&gt;
&lt;li&gt;Having a clean, uncluttered tablet OS is so nice!&lt;/li&gt;
&lt;li&gt;Full-device encryption doesn&amp;rsquo;t do anything. It shows an Android logo, but no
progress bar or other feedback. I didn&amp;rsquo;t realize it was stuck until I got
suspicious after 10 hours or so, checked online, and found that this is
apparently a known problem. Alas, I still cannot take this device out of my
house or put any sensitive data on it, because &lt;a href=&#34;/blog/2013/12/18/secure-your-accounts-and-devices/&#34;&gt;it is not secure
enough&lt;/a&gt; for me.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In other words, I&amp;rsquo;m loving it as a tablet to use around the home.&lt;/p&gt;

&lt;p&gt;I leave you with this precious gift from Ida, the protagonist in Monument Valley. You&amp;rsquo;re welcome.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/media/2015/01/ida-flower.png&#34; alt=&#34;Ida and the Flower&#34; /&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>If Eventual Consistency Seems Hard, Wait Till You Try MVCC</title>
      <link>http://www.xaprb.com/blog/2014/12/08/eventual-consistency-simpler-than-mvcc/</link>
      <pubDate>Mon, 08 Dec 2014 00:00:00 UTC</pubDate>
      
      <guid>http://www.xaprb.com/blog/2014/12/08/eventual-consistency-simpler-than-mvcc/</guid>
      <description>

&lt;p&gt;This should sound familiar:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;One of the great lies about NoSQL databases is that they&amp;rsquo;re simple. Simplicity
done wrong makes things a lot harder and more complicated to develop and
operate. Programmers and operations staff end up reimplementing (badly) things
the database should do.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Nobody argued this line of reasoning more vigorously than when trying to defend
relational databases, especially during the darkest years (ca.  2009-2010), when
NoSQL still meant &lt;strong&gt;NO SQL DAMMIT&lt;/strong&gt;, all sorts of NoSQL databases were sprouting,
and most of them were massively overhyped.&lt;/p&gt;

&lt;p&gt;But as valid as those arguments against NoSQL&amp;rsquo;s &amp;ldquo;false economy&amp;rdquo; simplicity
were and are, the arguments against relational databases&amp;rsquo; complexity hold true,
too.&lt;/p&gt;

&lt;p&gt;The truth is that no database is really simple. Databases have a lot of
functionality and behaviors&amp;mdash;even the &amp;ldquo;simple&amp;rdquo; databases do&amp;mdash;and require
deep knowledge to use well when reliability, correctness, and performance are
important.&lt;/p&gt;

&lt;h3 id=&#34;toc_0&#34;&gt;Eventual Consistency is Hard&lt;/h3&gt;

&lt;p&gt;Eventual consistency is hard to work with because developers bear extra burden.
I suppose the &lt;a href=&#34;http://www.allthingsdistributed.com/files/amazon-dynamo-sosp2007.pdf&#34;&gt;Dynamo
paper&lt;/a&gt; is
the best source to cite:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Dynamo targets the design space of an “always writeable” data store&amp;hellip;
This requirement forces us to push the complexity of conflict resolution to
the reads in order to ensure that writes are never rejected&amp;hellip; The next design
choice is who performs the process of conflict resolution. This can be done by
the data store or the application. If conflict resolution is done by the data
store, its choices are rather limited&amp;hellip;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;One can trivially quote this out of context and argue that a bunch of
database logic ends up being reimplemented in the application at read time,
everywhere a read occurs. Indeed, sometimes this extreme does occur. Some use
cases might actually need to check and reconcile conflicting updates with every
single read.&lt;/p&gt;

&lt;p&gt;You can find lots of other examples of this type of complexity in similar
systems, such as the &lt;a href=&#34;http://docs.basho.com/riak/latest/dev/using/conflict-resolution/&#34;&gt;Riak
documentation&lt;/a&gt;,
which has lofty-sounding phrases like &amp;ldquo;causal context&amp;rdquo; and &amp;ldquo;dotted version
vectors.&amp;rdquo; It does sound like one would need a PhD to use such a system, doesn&amp;rsquo;t
it?&lt;/p&gt;

&lt;p&gt;When challenged in this way, many NoSQL advocates would respond that tradeoffs
are necessary in distributed systems, and perhaps bring up the CAP Theorem,
&lt;a href=&#34;http://aphyr.com/tags/jepsen&#34;&gt;Jepsen&lt;/a&gt; and so forth.  These kinds of topics are
similar to Schroedinger&amp;rsquo;s Cat, or double-slit experiments, or whatnot.
Relatively ignorant people like me bring these up around the pool table and
argue about them to try to sound smart, without knowing much about them.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/media/2014/12/schroedingers-cat.jpg&#34; alt=&#34;schroedinger&#39;s cat&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Distributed systems are hard!  There&amp;rsquo;s no denying that. But is there a better
way?&lt;/p&gt;

&lt;h3 id=&#34;toc_1&#34;&gt;How Simple Are Relational Systems Anyway?&lt;/h3&gt;

&lt;p&gt;All this distributed systems theory and eventual consistency and so on&amp;hellip; it&amp;rsquo;s
enough to make you long for the simplicity of a good old relational database,
isn&amp;rsquo;t it? &amp;ldquo;Everyone knows&amp;rdquo; that servers are massively powerful these days. Your
favorite relational database of choice is claimed to be capable of scaling
vertically to all but the most incredibly large-scale applications. So why not
just do that, and keep it simple?&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s talk about that word, simplicity.&lt;/p&gt;

&lt;p&gt;Simplicity in relational systems is only achieved when there&amp;rsquo;s no concurrency.
Add in concurrency, and all the complexity of distributed systems comes home to
roost, because distributed and concurrent are fundamentally about solving some
of the same problems. In fact, unless you&amp;rsquo;re running a single-writer,
single-reader database on a single-core server&amp;mdash;and maybe not even then, I&amp;rsquo;m
not sure&amp;mdash;you actually have a distributed system inside your server.
Everything&amp;rsquo;s distributed.&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; lang=&#34;en&#34;&gt;&lt;p&gt;Sorry, I&amp;#39;m not impressed with serializable isolation via a single writer mutex.&lt;/p&gt;&amp;mdash; Preetam Jinka (@PreetamJinka) &lt;a href=&#34;//twitter.com/PreetamJinka/status/537313622410952704&#34;&gt;November 25, 2014&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Concurrent operation isn&amp;rsquo;t a nice-to-have in most systems, it&amp;rsquo;s a given.
The way many relational systems handle concurrency is with this nifty little
thing called Multi-Version Concurrency Control (MVCC). It&amp;rsquo;s way simpler than
eventual consistency. (Sarcasm alert!)&lt;/p&gt;

&lt;p&gt;It works a little like this:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;There are four standard transaction isolation levels, each with their own
kinds of constraints and tradeoffs. Each defines which kinds of bad,
inconsistent behaviors aren&amp;rsquo;t allowed to happen.&lt;/li&gt;
&lt;li&gt;In REPEATABLE READ, the isolation level that a lot of people consider ideal,
you get &amp;ldquo;read snapshots&amp;rdquo; that let you see an unchanging view of the database over
time. Even as it&amp;rsquo;s changing underneath you! This is implemented by keeping
old row versions until they are no longer needed.&lt;/li&gt;
&lt;li&gt;Other isolation levels, such as READ COMMITTED, are &amp;ldquo;bad.&amp;rdquo; Because they don&amp;rsquo;t
protect you, the developer, from the complexity of the underlying
implementation. And they don&amp;rsquo;t allow you a true ACID experience.&lt;sup&gt;1&lt;/sup&gt; A true ACID
experience is about Atomicity, Consistency, Isolation, and
Durability.&lt;/li&gt;
&lt;li&gt;Back to REPEATABLE READ, the only isolation level that is approved by the
Holy See. It&amp;rsquo;s really simple. Everything appears just like you are the only
user in the system. As a developer, you can just work with the database
logically as you&amp;rsquo;re supposed to, and you don&amp;rsquo;t have to think about other
transactions happening concurrently.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Clearly, this is much better than eventually consistent databases, right?&lt;/p&gt;

&lt;h3 id=&#34;toc_2&#34;&gt;The Rabbit-Hole That Is MVCC&lt;/h3&gt;

&lt;p&gt;Unfortunately, the relational databases and their MVCCs are far from such a
utopia. The reality is that MVCC is way more complex than I&amp;rsquo;ve described.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/media/2014/12/alice-down-the-rabbit-hole.jpg&#34; alt=&#34;alice-down-the-rabbit-hole&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;MVCC and the ACID properties are intertwined in very complex ways. The first
problem comes from the ACID properties themselves.  These four properties are
almost universally misunderstood. It&amp;rsquo;s almost as bad as the CAP theorem. I have
to look up the definitions myself every single time. And then I always
wind up asking myself, &amp;ldquo;what&amp;rsquo;s the difference between Consistency and
Isolation again?&amp;rdquo; Because the definitions seem like each one is halfway about the
other, and there&amp;rsquo;s no consistent way to think about them in isolation from each
other.&lt;sup&gt;2&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;Next, isolation levels. Every database implements them differently. There&amp;rsquo;s a
lot of disagreement about the right way to implement each of the isolation
levels, and this must have been an issue when the standards were written,
because the standards leave a lot unspecified. Most databases are pretty
opinionated, by contrast. Here&amp;rsquo;s what
&lt;a href=&#34;http://www.postgresql.org/docs/9.3/static/transaction-iso.html&#34;&gt;PostgreSQL says&lt;/a&gt; (emphasis mine):&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The reason that PostgreSQL only provides three isolation levels is that this
is &lt;em&gt;the only sensible way&lt;/em&gt;&lt;sup&gt;3&lt;/sup&gt; to map the standard isolation levels to the
multiversion concurrency control architecture.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And MySQL, &lt;a href=&#34;http://dev.mysql.com/doc/refman/5.6/en/set-transaction.html&#34;&gt;via InnoDB&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;InnoDB supports each of the transaction isolation levels described here using
different locking strategies. You can enforce a high degree of consistency
with the default REPEATABLE READ level, for operations on crucial data where
ACID compliance is important. Or you can relax the consistency rules with READ
COMMITTED or even READ UNCOMMITTED, in situations such as bulk reporting where
precise consistency and repeatable results are less important than minimizing
the amount of overhead for locking. SERIALIZABLE enforces even stricter rules
than REPEATABLE READ, and is used mainly in specialized situations, such as
with XA transactions and for troubleshooting issues with concurrency and
deadlocks.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;At a glance, it sounds like MySQL/InnoDB asserts that all four levels can be
sensibly implemented, in contradiction to PostgreSQL&amp;rsquo;s documentation. We&amp;rsquo;ll dig
into this more later. For the moment it&amp;rsquo;s enough to note that InnoDB&amp;rsquo;s MVCC behavior
is more similar to Oracle&amp;rsquo;s than it is to PostgreSQL&amp;rsquo;s, but still, the docs say
things like &amp;ldquo;A somewhat Oracle-like isolation level with respect to consistent
(nonlocking) reads.&amp;rdquo;&lt;/p&gt;

&lt;p&gt;From experience I know that Microsoft SQL Server&amp;rsquo;s locking and multiversion
concurrency model is different yet again. So there&amp;rsquo;s at least four different
implementations with very different behaviors&amp;mdash;and we haven&amp;rsquo;t even gotten to
other databases. For example, Jim Starkey&amp;rsquo;s failed Falcon storage engine
for MySQL was going to use &amp;ldquo;pure MVCC&amp;rdquo; in contradistinction to InnoDB&amp;rsquo;s &amp;ldquo;mixed
MVCC,&amp;rdquo; whatever that means. Falcon, naturally, also had &amp;ldquo;quirks&amp;rdquo; in its MVCC
implementation.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s dig into a few of these implementations a bit and see what&amp;rsquo;s really the
situation.&lt;/p&gt;

&lt;h3 id=&#34;toc_3&#34;&gt;InnoDB&amp;rsquo;s MVCC&lt;/h3&gt;

&lt;p&gt;InnoDB&amp;rsquo;s MVCC works, at a high level, by keeping old row versions as long as
they&amp;rsquo;re needed to be able to recreate a consistent snapshot of the past as the
transaction originally saw it, and locking any rows that are modified.&lt;/p&gt;

&lt;p&gt;There are at least four different scenarios to explore (one for each isolation
level), and more in various edge cases. Quirks, let&amp;rsquo;s call them.&lt;/p&gt;

&lt;p&gt;The most obvious case we should look at is REPEATABLE READ, the default. It&amp;rsquo;s
designed to let you select a set of rows and then repeatedly see the same rows
on every subsequent select, as long as you keep your transaction open. As the
docs say,&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;All consistent reads within the same transaction read the snapshot established
by the first read.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Sounds elegant and beautiful. But it turns ugly really, really fast.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;For locking reads (SELECT with FOR UPDATE or LOCK IN SHARE MODE), UPDATE, and
DELETE statements, locking depends on whether the statement uses a unique
index with a unique search condition, or a range-type search condition. For a
unique index with a unique search condition, InnoDB locks only the index
record found, not the gap before it. For other search conditions, InnoDB locks
the index range scanned, using gap locks or next-key locks to block insertions
by other sessions into the gaps covered by the range.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;What the hell just happened?&lt;/p&gt;

&lt;p&gt;The abstraction just
&lt;a href=&#34;http://www.joelonsoftware.com/articles/LeakyAbstractions.html&#34;&gt;leaked&lt;/a&gt;, that&amp;rsquo;s
what.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/media/2014/12/spiral-watch.jpg&#34; alt=&#34;Spiral Watch&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;The problem is due to several logical necessities and implementation details.
It&amp;rsquo;s not solely one or the other. The MVCC model is trying to balance a bunch of
things going on concurrently, and there are logical contradictions that can&amp;rsquo;t go
away, no matter how sophisticated the implementation. There are going to be edge
cases that have to be handled with special exceptions in the behavior. And the
implementation details leak through, inevitably. That&amp;rsquo;s what you are seeing above.&lt;/p&gt;

&lt;p&gt;One of the logical necessities, for example, is that you can only modify the
latest version of a row (eventually, at least). If you try to update an old version (the version
contained in your consistent snapshot), you&amp;rsquo;re going to get into trouble. There
can (eventually) be only one truth, and conflicting versions of the data aren&amp;rsquo;t allowed to be
presented to a user as they are in eventual consistency. For this reason,
various kinds of operations cause you to confront hard questions, such as:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Should the implementation disallow updating rows for which the snapshot has
an out-of-date version, i.e. its version of reality has diverged from the
latest version?&lt;/li&gt;
&lt;li&gt;What is the latest version? Is it the latest committed version, the latest
uncommitted version? What does &amp;ldquo;latest&amp;rdquo; mean? Is it &amp;ldquo;most recently updated by
clock time&amp;rdquo; or is it &amp;ldquo;update by the transaction with the highest sequence
number?&amp;rdquo; Does this vary between isolation levels?&lt;/li&gt;
&lt;li&gt;If the implementation allows updating rows that are out-of-date (supposing
the previous points have been resolved), what happens? Do you &amp;ldquo;leak&amp;rdquo; out of
your isolation level, hence breaking consistency within your transaction? Do
you fail the transaction? Or do you allow updating an old version, but then
fail at commit time?&lt;/li&gt;
&lt;li&gt;What happens if a transaction fails, and how does it fail / how is this
presented to the user? (InnoDB used to deadlock and roll back the whole
transaction; later it was changed to roll back just the failed statement).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Fundamentally you are going to run into problems such as these. And they have to
be resolved, with various levels of confusion and complexity.&lt;/p&gt;

&lt;p&gt;I should also note that InnoDB actually tries to go above and beyond the SQL
standard. The standard allows phantom reads in REPEATABLE READ, but InnoDB uses next-key
locking and gap locking to avoid this and bring REPEATABLE READ closer to
SERIALIZABLE without the obnoxious locking implied by SERIALIZABLE. PostgreSQL
does the same thing.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve barely scratched the surface of the complexities of how InnoDB handles
transactions, locking, isolation levels, and MVCC. I am not kidding. There is a
large amount of documentation about it in the official manual, much of which
requires serious study to understand. And beyond that, there is a lot that&amp;rsquo;s not
officially documented. For example, here&amp;rsquo;s a &lt;a href=&#34;//blogs.oracle.com/mysqlinnodb/entry/mysql_5_5_innodb_change&#34;&gt;blog post from one of the InnoDB
authors&lt;/a&gt;
that explains how various performance optimizations impact index operations.
This might seem unrelated, but every access InnoDB makes to data has to interact
with the MVCC rules it implements. And this all has implications for locking,
deadlocks, and so on. Locking in itself is a complex topic in InnoDB. The list goes
on.&lt;/p&gt;

&lt;h3 id=&#34;toc_4&#34;&gt;How It Works In PostgreSQL&lt;/h3&gt;

&lt;p&gt;Sensibly, apparently ;-) Well, seriously, I have a lot less experience with
PostgreSQL. But from the above it&amp;rsquo;s quite clear that the PostgreSQL
documentation writers could find lots of support for a claim that attempting to
implement all four standard isolation levels, at least in the way that InnoDB
does, is not sensible.&lt;/p&gt;

&lt;p&gt;The PostgreSQL documentation, unlike the MySQL documentation, is largely limited
to a &lt;a href=&#34;http://www.postgresql.org/docs/9.3/static/transaction-iso.html&#34;&gt;single
page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; lang=&#34;en&#34;&gt;&lt;p&gt;Read cursor isolation docs for Oracle, PG, InnoDB. PG docs are clear, others probably not. Tech writing is hard.&lt;/p&gt;&amp;mdash; markcallaghan (@markcallaghan) &lt;a href=&#34;//twitter.com/markcallaghan/status/528335458221449217&#34;&gt;October 31, 2014&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;First of all, PostgreSQL uses READ COMMITTED by default. This means that if you
SELECT some rows within a transaction, then wait while another transaction
modifies them and commits, then SELECT them again, you&amp;rsquo;ll see the changes.
Whether this is OK is for you to decide. It&amp;rsquo;s worth noting that a lot of people
run MySQL/InnoDB the same way, and there are lots of bugs and special behaviors
that end up making other isolation levels unusable for various reasons when
various features are used in MySQL.&lt;/p&gt;

&lt;p&gt;I think Mark Callaghan&amp;rsquo;s tweet, embedded above, is largely true. But even the
PostgreSQL docs, as clear as they are, have some things that are hard to parse.
Does the first part of this excerpt contradict the second part? (Emphasis mine):&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;a SELECT query (without a FOR UPDATE/SHARE clause) sees only data committed
before the query began; it &lt;em&gt;never sees either uncommitted data or changes
committed during query execution by concurrent transactions&lt;/em&gt;. In effect, a
SELECT query sees a snapshot of the database as of the instant the query
begins to run. However, SELECT does see the effects of previous updates
executed within its own transaction, even though they are not yet committed.
Also note that &lt;em&gt;two successive SELECT commands can see different data, even
though they are within a single transaction, if other transactions commit
changes during execution of the first SELECT.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Even PostgreSQL&amp;rsquo;s apparently less complicated MVCC implementation has thorny
questions such as those. On more careful reading, the meaning becomes clear (and
I don&amp;rsquo;t see how to improve it, by the way). The issue remains: these are subtle
topics that inherently require close attention to detail.&lt;/p&gt;

&lt;p&gt;One of the most elegantly put points in this documentation page is the remark
that &amp;ldquo;Consistent use of Serializable transactions can simplify development.&amp;rdquo;&lt;/p&gt;

&lt;h3 id=&#34;toc_5&#34;&gt;It&amp;rsquo;s Not Just MySQL And PostgreSQL&lt;/h3&gt;

&lt;p&gt;Many other systems implement some type of MVCC. All of them, as per the name,
rely on multiple versions of records/rows, and deal with the various conflicts
between these multiple versions in various ways. Some more complex, some less.
The behavior the developer sees is &lt;a href=&#34;http://www.xaprb.com/blog/2013/12/28/immutability-mvcc-and-garbage-collection/&#34;&gt;heavily influenced by the underlying
implementation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;And developers have to deal with this. If you&amp;rsquo;re going to use one of these
systems competently, you must know the intricacies. I saw this again and
again while consulting with MySQL users. Many developers, including myself, have
written applications that fall afoul of the MVCC implementation and rules. The
results?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Performance problems.&lt;/li&gt;
&lt;li&gt;Availability problems.&lt;/li&gt;
&lt;li&gt;Deadlocks and other errors.&lt;/li&gt;
&lt;li&gt;Bugs. Horrible, subtle bugs in the way the app uses the database.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The only systems I&amp;rsquo;m aware of that can avoid these problems are those that use
strategies such as single-writer designs. These, contrary to what their
proponents will say about them, generally do not scale well at all. Many a
MyISAM has been reinvented by database developers who don&amp;rsquo;t understand why
MyISAM doesn&amp;rsquo;t scale.&lt;/p&gt;

&lt;h3 id=&#34;toc_6&#34;&gt;Back To Eventual Consistency&lt;/h3&gt;

&lt;p&gt;In contrast with that nightmare of complexity, I&amp;rsquo;m not so sure eventual
consistency is really all that hard for developers to deal with. The developers
will &lt;em&gt;always&lt;/em&gt; need to be aware of the exact behavior of the implementation
they&amp;rsquo;re writing against, relational or not. I&amp;rsquo;ve studied quite a few eventually
consistent databases (although I&amp;rsquo;ll admit I&amp;rsquo;ve spent most of my career elbows
deep in InnoDB) and it seems hard to believe Cassandra or Riak is really more
complex to develop against than InnoDB, for the use cases that they serve well.&lt;/p&gt;

&lt;p&gt;Eventually consistent is easy to ridicule, though. Here&amp;rsquo;s one of my favorites:&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; lang=&#34;en&#34;&gt;&lt;p&gt;Eventually consistent &lt;a href=&#34;//twitter.com/hashtag/FiveWordTechHorrors?src=hash&#34;&gt;#FiveWordTechHorrors&lt;/a&gt;&lt;/p&gt;&amp;mdash; Stewart Smith (@stewartsmith) &lt;a href=&#34;//twitter.com/stewartsmith/status/410651205615230976&#34;&gt;December 11, 2013&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;(If you don&amp;rsquo;t get the joke, just wait a while. It&amp;rsquo;ll come to you.)&lt;/p&gt;

&lt;p&gt;Can we have the best of all worlds? Can we have transactional behavior with
strong ACID properties, high concurrency, etc, etc? Some claim that we can.
&lt;a href=&#34;//foundationdb.com/&#34;&gt;FoundationDB&lt;/a&gt;, for example, &lt;a href=&#34;//foundationdb.com/acid-claims&#34;&gt;asserts&lt;/a&gt; that
it&amp;rsquo;s possible and that their implementation is fully serializable, calling other
isolation levels weak, i.e.  not true I-as-in-ACID. I haven&amp;rsquo;t yet used
FoundationDB so I can&amp;rsquo;t comment, though I have always been impressed with what
I&amp;rsquo;ve read from them.&lt;/p&gt;

&lt;p&gt;But since I am not ready to assert that there&amp;rsquo;s a distributed system I know to
be better and simpler than eventually consistent datastores, and since I
certainly know that InnoDB&amp;rsquo;s MVCC implementation is full of complexities, for
right now I am probably in the same position most of my readers are: the two
viable choices seem to be single-node MVCC and multi-node eventual consistency.
And I don&amp;rsquo;t think MVCC is the simpler paradigm of the two.&lt;/p&gt;

&lt;p&gt;Notes:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;If you don&amp;rsquo;t &lt;a href=&#34;//twitter.com/xaprb&#34;&gt;tweet&lt;/a&gt; me puns and acid-cat meme pictures about this paragraph, I shall be disappointed in you.&lt;/li&gt;
&lt;li&gt;Pun intended.&lt;/li&gt;
&lt;li&gt;Also note that PostgreSQL used to provide only &lt;em&gt;two&lt;/em&gt; isolation
levels, and the documentation used to make the same comment about it being
the only sensible thing to do. It&amp;rsquo;s not quite clear to me whether this is
meant to imply that it&amp;rsquo;s the only sensible way to implement MVCC, or the only
sensible way to implement PostgreSQL&amp;rsquo;s MVCC.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Pic credits:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.writerightwords.com/down-the-rabbit-hole/&#34;&gt;Alice&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.flickr.com/photos/t_zero/7762560470/&#34;&gt;Schroedinger&amp;rsquo;s Cat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.flickr.com/photos/stuartncook/4613088809/&#34;&gt;Spiral Watch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>A Free Tutorial On Go&#39;s Database/SQL Package</title>
      <link>http://www.xaprb.com/blog/2014/12/06/free-tutorial-golang-database-sql/</link>
      <pubDate>Sat, 06 Dec 2014 00:00:00 UTC</pubDate>
      
      <guid>http://www.xaprb.com/blog/2014/12/06/free-tutorial-golang-database-sql/</guid>
      <description>&lt;p&gt;Do you use Google&amp;rsquo;s Go language (golang)? Do you use a relational database such as MySQL
or PostgreSQL with it? Do you want to learn how to?&lt;/p&gt;

&lt;p&gt;Go has a package called &lt;code&gt;database/sql&lt;/code&gt; for connecting to relational databases.
There&amp;rsquo;s package &lt;a href=&#34;http://golang.org/pkg/database/sql/&#34;&gt;documentation&lt;/a&gt;, but you&amp;rsquo;ll
need to read the source code if you really want to understand how to use the
package. The documentation doesn&amp;rsquo;t really explain how to use the package, it
just explains what it does.&lt;/p&gt;

&lt;p&gt;Fortunately, there&amp;rsquo;s a free, online, opensource tutorial that fills this need.
If you haven&amp;rsquo;t read it, I highly recommend it. (I am one of the authors.) There
is a lot of wisdom from very experienced people in the tutorial, including the
two primary authors of the main MySQL driver for Go.&lt;/p&gt;

&lt;p&gt;The tutorial is online at &lt;a href=&#34;http://go-database-sql.org/&#34;&gt;go-database-sql.org&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Tell your friends, please! Friends don&amp;rsquo;t let friends make preventable mistakes
:-)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Why Deployment Freezes Don&#39;t Prevent Outages</title>
      <link>http://www.xaprb.com/blog/2014/11/29/code-freezes-dont-prevent-outages/</link>
      <pubDate>Sat, 29 Nov 2014 00:00:00 UTC</pubDate>
      
      <guid>http://www.xaprb.com/blog/2014/11/29/code-freezes-dont-prevent-outages/</guid>
      <description>

&lt;p&gt;I have $10 that says you&amp;rsquo;ve experienced this before: there&amp;rsquo;s a holiday, trade show, or other important event coming up. Management is worried about the risk of an outage during this all-important time, and restricts deployments from the week prior through the end of the event.&lt;/p&gt;

&lt;p&gt;What really happens, of course, is that the system in question becomes booby-trapped with extra risk. As a result, problems are more likely, and when there there is even a slight issue, it has the potential to escalate into a major crisis.&lt;/p&gt;

&lt;p&gt;Why does this happen? As usual, there&amp;rsquo;s no single root cause, but a variety of problems combine to create a brittle, risky situation.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/media/2014/11/freeze.png&#34; alt=&#34;freeze&#34; /&gt;
&lt;/p&gt;

&lt;h3 id=&#34;toc_0&#34;&gt;Assumptions&lt;/h3&gt;

&lt;p&gt;When managers declare a freeze, they&amp;rsquo;re not being malicious. They&amp;rsquo;re doing something that seems to make sense. That&amp;rsquo;s why it&amp;rsquo;s important to understand the reasoning.&lt;/p&gt;

&lt;p&gt;The goal is simple: prevent breaking something that&amp;rsquo;s working. And a lot of issues seem to trace back to a deployment that breaks a working system, so it&amp;rsquo;s natural to want to avoid a deployment.&lt;/p&gt;

&lt;p&gt;The assumptions, in my experience, are that&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the systems are working now&lt;/li&gt;
&lt;li&gt;systems break because of change&lt;/li&gt;
&lt;li&gt;restricting change will prevent breakage&lt;/li&gt;
&lt;li&gt;the riskiest change is deployment, so restricting deployment eliminates risky change&lt;/li&gt;
&lt;li&gt;potential downsides are less costly than potential outages&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Unfortunately, the assumptions are wrong, which is why deployment freezes often have the opposite of the intended effect.&lt;/p&gt;

&lt;h3 id=&#34;toc_1&#34;&gt;Change Breaks Things&lt;/h3&gt;

&lt;p&gt;It&amp;rsquo;s true that change breaks things, but that doesn&amp;rsquo;t tell the whole story. The reality is that systems are always changing, even when you think they&amp;rsquo;re not. And they&amp;rsquo;re also broken. Right now. You just don&amp;rsquo;t know it yet.&lt;/p&gt;

&lt;p&gt;The first great lie is that you can stop systems from changing. You can&amp;rsquo;t stop change. Shipping code is &lt;em&gt;not&lt;/em&gt; the only change in a system. Unless the system is turned off completely, it&amp;rsquo;s changing every instant. User requests are being served. Logs are being written. Cron jobs and other scheduled tasks are starting, running, and stopping. The system clock is advancing. There are also dependencies on other systems, which likewise are undergoing constant change. And there are requirements changes, which nobody ever thinks about.&lt;/p&gt;

&lt;p&gt;Most of these changes happen all the time and nothing goes wrong, or humans adjust and fix things as a matter of course. But many of these changes actually expose corner-case bugs or weird problems that just aren&amp;rsquo;t tickled often. As a result, you get the illusion that your systems are not broken. And that&amp;rsquo;s the second great lie, because your systems &lt;em&gt;are&lt;/em&gt; broken. You just don&amp;rsquo;t know it yet.&lt;/p&gt;

&lt;p&gt;What&amp;rsquo;s broken? All sorts of things. Your Java runtime has a time bug that&amp;rsquo;s waiting to throw it into an infinite loop when a leap second happens. Your website has a SQL injection vulnerability that nobody&amp;rsquo;s exploited yet. A set of servers that you bought all together and installed at the same time has a ticking time bomb in the RAID controllers, which are all going to go into degraded self-test mode simultaneously. Your auto-increment integer column is  crossing the 2 billion mark right now, and will soon reach its max value.&lt;/p&gt;

&lt;p&gt;The reality is that practically every running system is a ticking time bomb. You just don&amp;rsquo;t know what&amp;rsquo;s ticking or how long till it stops.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/media/2014/11/clock.jpg&#34; alt=&#34;clock&#34; /&gt;
&lt;/p&gt;

&lt;h3 id=&#34;toc_2&#34;&gt;Uncontrolled Change Is More Dangerous&lt;/h3&gt;

&lt;p&gt;As I said, I&amp;rsquo;m not demonizing your managers. They&amp;rsquo;re actually right to think that deployments are riskier and are likely to cause breaking changes. That&amp;rsquo;s because deployment is often a barely-controlled change.&lt;/p&gt;

&lt;p&gt;Generally, the more automated (scripted) the deployment is, the safer. This is actually not because of the automation, but because of an effect of automation. With automated deployment in place, deployment usually becomes a more frequent process, which tends to exercise, expose, and remove sources of risk to a larger extent.&lt;/p&gt;

&lt;p&gt;So the headline of this section is wrong, in a way. Uncontrolled change isn&amp;rsquo;t what&amp;rsquo;s dangerous. Infrequent change is the problem.&lt;/p&gt;

&lt;p&gt;Wait! Isn&amp;rsquo;t that precisely the opposite of what the managers are asking? Aren&amp;rsquo;t they asking us to freeze deployments &lt;em&gt;in order to slow the pace of change and decrease risk?&lt;/em&gt;  Yep, that&amp;rsquo;s right. Their intuition is actually the reverse of the truth: to make the systems safer, they should be encouraging more deployments, not fewer.&lt;/p&gt;

&lt;p&gt;Deplyoment freezes actually add risk. But that&amp;rsquo;s not all. The deployoment freeze sets in place a vicious cycle that includes a couple of other effects and spirals down and down. Watch as I show you how the deplyoment freeze is only the first step in how we ambush the operations engineers.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/media/2014/11/raccoon.jpg&#34; alt=&#34;excellent smithers&#34; /&gt;
&lt;/p&gt;

&lt;h3 id=&#34;toc_3&#34;&gt;You Can&amp;rsquo;t Freeze Deployments&lt;/h3&gt;

&lt;p&gt;Freezes never, but &lt;em&gt;never&lt;/em&gt;, work. You can declare a freeze, but you can&amp;rsquo;t make it happen.&lt;/p&gt;

&lt;p&gt;This follows naturally from the inability to actually stop the systems from changing. Systems that change are going to break, and you have to respond to this.&lt;/p&gt;

&lt;p&gt;There are other effects, too. Requirements change, for example. The catalog merchants went to the marketers and decided to offer a special promo. Buy a tablet and a case in combination with a warranty, and get a bluetooth keyboard free! Sounds great; we&amp;rsquo;ll make a bundle &amp;ndash; let&amp;rsquo;s print and ship those catalogs. Just in time for the holidays! Whoops, nobody told IT about this. Catalogs are printed already. We&amp;rsquo;ve got two weeks and there&amp;rsquo;s no going back; we need the order-entry system and the website to support this promo. Bingo; forced change.&lt;/p&gt;

&lt;p&gt;Whether it&amp;rsquo;s a promo or a bugfix, something always has to be changed. So we always have to break the rule. This is why the rule inevitably ends up being &lt;em&gt;no deployments except for emergency changes.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This is getting good. What&amp;rsquo;s riskier than a change? An emergency change. What&amp;rsquo;s riskier still? Undeployed code!&lt;/p&gt;

&lt;h3 id=&#34;toc_4&#34;&gt;Undeployed Code Is Inventory; Inventory Is Risk&lt;/h3&gt;

&lt;p&gt;The process of developing and deploying code is really a process of forking and merging your codebase. A developer writes a new version of the application, which diverges from what&amp;rsquo;s running in production. The developer then merges it back in and deploys it to production, resolving the differences.&lt;/p&gt;

&lt;p&gt;There are at least two key points where &lt;em&gt;inventory&lt;/em&gt; of risk builds up in this process. The first is when the developer&amp;rsquo;s codebase isn&amp;rsquo;t merged into the main code yet. The longer this waits, and the more the code diverges, the riskier. Secondly, after merging and before deployment.&lt;/p&gt;

&lt;p&gt;Code that has been merged and not deployed is a loaded gun. If I merge in my changes and don&amp;rsquo;t deploy them, and you then merge and deploy yours, you&amp;rsquo;ve just deployed mine too. This was more than you bargained for. It&amp;rsquo;s now more likely that your deployment will break something, and harder for you to fix if it does.&lt;/p&gt;

&lt;p&gt;In a deployment freeze, two important things happen.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Lots of latent changes build up, ready to break the whole world when the freeze is lifted. &lt;em&gt;There is increasing risk of breaking the system after the freeze.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Every developer&amp;rsquo;s codebase, and knowledge of the codebase, is diverging from production. Development and QA environments typically are, too. As a result, when emergency changes have to be applied to production during the freeze, breakage is much more likely. &lt;em&gt;There is increasing risk of breaking the system during the freeze.&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;toc_5&#34;&gt;Frozen Systems are Inoperable&lt;/h3&gt;

&lt;p&gt;We&amp;rsquo;ve seen that the tip of the codebase is where the least risk has accumulated. The tip is where things work best. Frozen systems get further behind this tip, and therefore much riskier.&lt;/p&gt;

&lt;p&gt;Infrastructure is code, too. Frozen systems also become incompatible with the current tip of environment configuration and infrastructure automation code. The result is that emergency deployments are often done outside of normal change control procedures, and the usual automation and deployment code can&amp;rsquo;t be used.&lt;/p&gt;

&lt;p&gt;To illustrate this problem, consider that app code and automation code are usually separate, although there is a dependency. This dependency is not properly versioned most of the time. Is your Puppet code version-controlled in lockstep with your application code, such that if you want to deploy a stale version of the app code, the deployment process will check out and use the older Puppet code? Would this even work, if it were possible &amp;ndash; can you just run old Puppet code on systems that have been advanced forward? The answer to both of these questions is likely no.&lt;/p&gt;

&lt;p&gt;Imagine trying to drive your car without all the usual help you get from it: no mirrors, no gauges, no power steering, no power brakes. A car with all these things disabled is largely inoperable for most people.&lt;/p&gt;

&lt;p&gt;A system that&amp;rsquo;s stale in production for a month, while developers work actively on a bunch of unshipped changes, is in a similar state. Important controls, indicators, and assists are disabled. It&amp;rsquo;s largely inoperable.&lt;/p&gt;

&lt;p&gt;We&amp;rsquo;ve seen that a deployment freeze can&amp;rsquo;t prevent the need for changes. Now we see that it forces the inevitable changes to be done in a much more dangerous way, seriously increasing the risk of problems. Looks like the freeze is not preventing the risk of an outage as intended!&lt;/p&gt;

&lt;h3 id=&#34;toc_6&#34;&gt;The Cost Of Deployment Freezes&lt;/h3&gt;

&lt;p&gt;The assumption is that the downsides of a deployment freeze are outweighed by the benefit of avoiding outages. I&amp;rsquo;m arguing that the benefit is much smaller than expected, and may even be negative. What about the costs?&lt;/p&gt;

&lt;p&gt;Deployment freezes have a huge productivity cost. Huge.&lt;/p&gt;

&lt;p&gt;When you can&amp;rsquo;t deploy, you can&amp;rsquo;t resolve the temporary tension in the system that results from changes that aren&amp;rsquo;t merged or deployed. Many changes you make while developing the system have to go through a compatibility lifecycle: to mutate from state A to B, you must first go to AB, which is backwards compatible with A and forward compatible with B. Then you move from AB to B.&lt;/p&gt;

&lt;p&gt;A simple example is adding a column to a table. You make sure the code ignores new columns, add the column with a default value, then make the code recognize and work with the new column, then remove the default value once it&amp;rsquo;s no longer needed.&lt;/p&gt;

&lt;p&gt;This kind of compatibility lifecycle represents a set of &lt;em&gt;dependencies&lt;/em&gt; across time. If you&amp;rsquo;ve read The Goal, you know dependencies are bad for workflow. These dependencies become blockers for developers working on the code, and even for other developers and operations staff. If the dependencies are short-lived, it often isn&amp;rsquo;t too bad. This is the case when you deploy a dozen times a day. But if the dependencies become long-lived, large portions of engineering slows down or stops completely. Projects have to be shelved until things can be deployed. Meanwhile, work that&amp;rsquo;s been done on these projects becomes stale and creates conflicts with alternative work. It often has to be reworked later.&lt;/p&gt;

&lt;p&gt;What was a local change and dependency becomes, given a little more time, a global blocker and waste of work.&lt;/p&gt;

&lt;p&gt;This scenario is practically certain to happen. Deployment freezes crush productivity, often long beyond the duration of the freeze itself.&lt;/p&gt;

&lt;h3 id=&#34;toc_7&#34;&gt;What About Feature Freezes?&lt;/h3&gt;

&lt;p&gt;It&amp;rsquo;s fairly common for large, complex, fast-moving systems to declare feature freezes in preparation for a major release. (Think of versions of operating systems or databases, for example.) However, this is different from a deployment freeze in a web appication.&lt;/p&gt;

&lt;p&gt;The most important difference is that a deployment freeze is an attempt to branch the infrastructure, code/app, data, system state, and activity (customers/users). This is not branching one thing, but many interdependent things. This is practically impossible to do.&lt;/p&gt;

&lt;h3 id=&#34;toc_8&#34;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;Frozen systems can run as-is briefly, but then pressure to change them mounts steeply. The system grows stale, but things change anyway and force changes. These changes become much more difficult and dangerous, and the likelihood of an outage grows quickly.&lt;/p&gt;

&lt;p&gt;Code freezes thus make systems more likely to break, while impacting productivity. Both the cost and the risk are much worse than intuition would suggest.&lt;/p&gt;

&lt;p&gt;I believe that a focus on improving the processes by which changes are made, making smaller and more frequent iterations, and finding out and fixing breakage as soon as possible is a better way to the goal. But that&amp;rsquo;s a different article&lt;/p&gt;

&lt;p&gt;What have your experiences been? Let me know in the comments.&lt;/p&gt;

&lt;p&gt;Image credits: &lt;a href=&#34;http://www.imdb.com/title/tt0118688/&#34;&gt;freeze&lt;/a&gt;, &lt;a href=&#34;https://www.flickr.com/photos/jlhopgood/6795353385/&#34;&gt;clock&lt;/a&gt;, &lt;a href=&#34;http://memegenerator.net/instance/53212554&#34;&gt;raccoon&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Can You Bring A Guitar To Velocity?</title>
      <link>http://www.xaprb.com/blog/2014/11/03/bring-guitar-velocity/</link>
      <pubDate>Mon, 03 Nov 2014 00:00:00 UTC</pubDate>
      
      <guid>http://www.xaprb.com/blog/2014/11/03/bring-guitar-velocity/</guid>
      <description>&lt;p&gt;I need help. I&amp;rsquo;m giving an Ignite talk at &lt;a href=&#34;http://velocityconf.com/velocityeu2014/&#34;&gt;Velocity
EU&lt;/a&gt; that involves a guitar. I
don&amp;rsquo;t want to bring a guitar all the way from America just for this. Would you
please loan me one?&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/media/2014/01/4542297929_49286da35a.jpg&#34; alt=&#34;guitar&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;It doesn&amp;rsquo;t need to be anything special &amp;ndash; any old classical or acoustic 6-string
standard guitar will do. All I&amp;rsquo;m going to do is tune it.&lt;br /&gt;
If you can bring a guitar to loan me, please post in the comments or give me a
shout on &lt;a href=&#34;https://twitter.com/xaprb&#34;&gt;Twitter&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Thank you in advance!&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.flickr.com/photos/doug88888/4542297929/&#34;&gt;Pic Credit&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How To Print All The Way To The Edge In Microsoft Word</title>
      <link>http://www.xaprb.com/blog/2014/11/01/print-full-bleed-microsoft-word/</link>
      <pubDate>Sat, 01 Nov 2014 00:00:00 UTC</pubDate>
      
      <guid>http://www.xaprb.com/blog/2014/11/01/print-full-bleed-microsoft-word/</guid>
      <description>&lt;p&gt;You&amp;rsquo;re creating a document with Word that you want to turn into a nice full-page PDF. It has a gorgeous background color that will look great. But every time you convert it to a PDF, it ends up with ugly white borders at the edges, and Word warns you about printing beyond the printable margins. Dragging the margins and changing the Page Setup options does no good. How can you fix this?&lt;/p&gt;

&lt;p&gt;The secret is that the printable margins are defined in the paper Word thinks
it&amp;rsquo;s &amp;ldquo;printing&amp;rdquo; to, not in the document itself. You need to define a new set of
paper settings and use that. Then you can print &amp;ldquo;full-bleed&amp;rdquo; to the edge of the
document, including graphics, lines, text and background colors. Here&amp;rsquo;s how:&lt;/p&gt;

&lt;p&gt;Go to &amp;ldquo;File &amp;gt; Page Setup.&amp;rdquo; In the &amp;ldquo;Paper Size&amp;rdquo; dropdown menu, select &amp;ldquo;Custom Paper Sizes.&amp;rdquo; Here&amp;rsquo;s what that looks like in a Mac.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/media/2014/11/paper-size.png&#34; alt=&#34;paper-size&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Now add a new paper size, and call it &amp;ldquo;Full Bleed.&amp;rdquo; Set the non-printable area to 0 on all sides. Here&amp;rsquo;s what that should look like.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/media/2014/11/full-bleed.png&#34; alt=&#34;full-bleed&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Now you&amp;rsquo;re done. Your PDF document will look just as you see it in the visual
preview, including background colors and other elements that reach the edge of
the page.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Win a Free Pass to Velocity</title>
      <link>http://www.xaprb.com/blog/2014/10/30/win-free-pass-velocity/</link>
      <pubDate>Thu, 30 Oct 2014 00:00:00 UTC</pubDate>
      
      <guid>http://www.xaprb.com/blog/2014/10/30/win-free-pass-velocity/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://velocityconf.com&#34;&gt;O&amp;rsquo;Reilly Velocity&lt;/a&gt; is November 17-19 in Barcelona. O’Reilly gave me a 2-day pass to give away, and I decided to have some fun with it. We’re also giving away a pass on the &lt;a href=&#34;https://vividcortex.com/blog/2014/10/30/win-a-free-pass-to-velocity-barcelona/&#34;&gt;VividCortex blog&lt;/a&gt;, so you can double your odds of winning.&lt;/p&gt;

&lt;p&gt;For your chance to win a 2-day pass, do one of the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Answer any of the following questions; or&lt;/li&gt;
&lt;li&gt;Write a haiku that’s somehow relevant to Velocity&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tweet your answers to @xaprb with #velocitytrivia. You can find the answers to the questions on the &lt;a href=&#34;http://velocityconf.com&#34;&gt;velocityconf.com&lt;/a&gt; website. Speed and accuracy is your friend in this game, as answers will not be accepted after November 6. I’ll announce the winner November 7. Good luck!&lt;/p&gt;

&lt;p&gt;Here are the questions:&lt;/p&gt;

&lt;p&gt;Q.1: Which sessions are about anomaly detection? Make sure you look for one that doesn’t have “anomaly” in the title.&lt;/p&gt;

&lt;p&gt;Q.2: Which session (link to it) might help you avoid cognitive traps?&lt;/p&gt;

&lt;p&gt;Q.3: Which session (link to it) is absolutely swimming in puns?&lt;/p&gt;

&lt;p&gt;Q.4:What are the “five reasons” to come to Velocity? Bolded reasons are fine. (hint, reading About Velocity will help)&lt;/p&gt;

&lt;p&gt;Q.5: Which Velocity EU Event gives you 5 minutes to get on stage and talk your latest passion, idea or hack?&lt;/p&gt;

&lt;p&gt;Q.6: Who’s going to get up on stage and use math and physics to tune a musical instrument, and what does that have to do with web performance and operations?&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The Root Cause Fallacy</title>
      <link>http://www.xaprb.com/blog/2014/07/21/root-cause-fallacy/</link>
      <pubDate>Mon, 21 Jul 2014 00:00:00 UTC</pubDate>
      
      <guid>http://www.xaprb.com/blog/2014/07/21/root-cause-fallacy/</guid>
      <description>&lt;p&gt;Wouldn&amp;rsquo;t you like to find the root cause of that downtime incident? Many people
would. But experience has taught me that there is no such thing as a single root
cause. Instead, there&amp;rsquo;s a chain of interrelated causes, each of which is
necessary but none of which is sufficient to cause the overall problem.&lt;/p&gt;

&lt;p&gt;I am often reminded of an outage years ago. It was &amp;ldquo;caused&amp;rdquo; by a failed disk.
But the disk was in a RAID5 array, and another disk in that array had failed
some time previously. Backups had also failed some time previously, so there
were no backups. Health checks didn&amp;rsquo;t notify anyone of the degraded disk array,
due to a misconfigured alerting system. Alerting and backups failed because the
person in charge of operations was not performing his duties.  The operations
person was still in the driver&amp;rsquo;s seat because of management dysfunction.&lt;/p&gt;

&lt;p&gt;If you really want to get to the root cause of a problem, you need to use the
Five Whys approach. I rarely do that because I already know where it ends. The
CEO or equivalent is always the problem. It&amp;rsquo;s turtles all the way down (or up).
Saying that the CEO is ultimately responsible is true but useless. The CEO is
ultimately responsible for &lt;em&gt;everything&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/media/2014/07/turtles.jpg&#34; alt=&#34;Turtles&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;That&amp;rsquo;s why the search for a root cause is usually a witch-hunt in disguise, trying
to find someone or something to blame. If you think there is really a single
cause, you eventually must identify a single person. If you stop short of that,
everyone knows the process was a farce. But blaming a person is also a farce.
Everyone knows that someone&amp;rsquo;s being thrown under the bus and that wasn&amp;rsquo;t the
real problem.&lt;/p&gt;

&lt;p&gt;There are several solutions to this dilemma. One is to stop looking for a
&lt;em&gt;single&lt;/em&gt; root cause, and instead identify the &lt;em&gt;system&lt;/em&gt; of conditions or
dysfunctions that jointly caused the observed problem. This allows something
constructive to come out of the postmortem, instead of inexorably bringing
pressure to bear on a well-meaning person who will then be sacrificed to appease
the false gods of reductionist blame-gaming.&lt;/p&gt;

&lt;p&gt;Another is to change the culture and own failures as opportunities. Navigating
this can be tricky. I&amp;rsquo;ve heard from more than one person who was fired from a
workforce with a supposedly &amp;ldquo;blameless culture&amp;rdquo; policy after tripping over a
booby-trap. I haven&amp;rsquo;t attended one yet, but I&amp;rsquo;ve heard that Dave Zwieback&amp;rsquo;s
postmortem workshops are excellent.&lt;/p&gt;

&lt;p&gt;More and more people I speak to are either doubtful or outright reject
root-cause analysis these days. That&amp;rsquo;s a good thing. I used to be pressured for
root-cause analysis years ago, and there was always an airtight and unspoken
assumption that &lt;em&gt;of course&lt;/em&gt; such a thing exists and is the right way to handle
the aftermath of an incident. I&amp;rsquo;m happy the times are changing. These days, even
some companies have stopped saying their tools or products can find root causes.
Maybe this trend will allow us to replace the manifest failures of root-cause
analysis with something more helpful.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.flickr.com/photos/animaltourism/5096371069/&#34;&gt;Pic Credit&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A Review Of The Docker Book</title>
      <link>http://www.xaprb.com/blog/2014/07/14/the-docker-book/</link>
      <pubDate>Mon, 14 Jul 2014 00:00:00 UTC</pubDate>
      
      <guid>http://www.xaprb.com/blog/2014/07/14/the-docker-book/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.dockerbook.com/&#34;&gt;The Docker Book&lt;/a&gt; is a newly published book from
James Turnbull, whose name you will recognize if you&amp;rsquo;re at all familiar with
DevOps, Puppet, or Docker itself. It&amp;rsquo;s a nice introduction to what Docker is and
how to get started using it. It&amp;rsquo;s like Goldilocks &amp;mdash; not too detailed, not too
superficial, just right.&lt;/p&gt;

&lt;p&gt;The book starts from the basics, assuming no prior knowledge with Docker, or
even most of the core concepts of virtualization, but moves quickly through
these topics into installing Docker and getting started with it. The important
and useful tasks &amp;mdash; starting, stopping, interacting with containers, running
containers as daemons, and so on &amp;mdash; are all covered in the right amount of
detail.&lt;/p&gt;

&lt;p&gt;After this, the book switches into building your own images and using them for
real things. There&amp;rsquo;s a couple chapters dedicated to some sample applications.
These aren&amp;rsquo;t silly hello-world applications, either &amp;mdash; we&amp;rsquo;re talking about
real, useful apps, like your own continuous integration system running Jenkins CI.&lt;/p&gt;

&lt;p&gt;The final two chapters are about using the Docker API, getting help, and
extending and contributing to Docker itself (it&amp;rsquo;s opensource, of course).&lt;/p&gt;

&lt;p&gt;So what do I think? First, great job James. I know it&amp;rsquo;s a lot of work to write a
book like this (275 pages). Second, since Docker is very new, obviously things
are going to change a lot, and in my opinion James has gone into just the right
level of detail, keeping that in mind. The book doesn&amp;rsquo;t feel bleeding-edge to
me, though. It&amp;rsquo;s pretty well thought-out and professionally written, clear and
concise. I have a feeling it will get a lot deeper and more detailed in future
editions, but right now it&amp;rsquo;s a great way to get started with Docker!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Mac&#39;s Time Machine and Symlinks</title>
      <link>http://www.xaprb.com/blog/2014/07/07/mac-time-machine-links/</link>
      <pubDate>Mon, 07 Jul 2014 00:00:00 UTC</pubDate>
      
      <guid>http://www.xaprb.com/blog/2014/07/07/mac-time-machine-links/</guid>
      <description>&lt;p&gt;I use Mac OSX&amp;rsquo;s built-in Time Machine for backups, and a couple of times I&amp;rsquo;ve
noticed my backups failed and couldn&amp;rsquo;t be completed successfully. I was unable
to fix the problem until I reformatted the backup drive. Today I think I
stumbled on the solution.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/media/2014/07/time-machine.jpg&#34; alt=&#34;Time Machine&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;The problem seems to come from swapping a directory and a symlink to it. I had a
set of directories with symlinks back and forth, and sometimes I moved the
directory to where the symlink was and made a symlink to it from where it used
to be. That seems to confuse Time Machine mightily.&lt;/p&gt;

&lt;p&gt;Just removing both the symlink and the directory seems to &amp;ldquo;fix&amp;rdquo; it. Well&amp;hellip;
maybe it&amp;rsquo;s not a fix, but it&amp;rsquo;s better than the nuclear option of reformatting
the backup drive.&lt;/p&gt;

&lt;p&gt;Hope this helps someone.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.flickr.com/photos/24071429@N08/2309369605/&#34;&gt;Photo Credit&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>On Focus</title>
      <link>http://www.xaprb.com/blog/2014/07/05/on-focus/</link>
      <pubDate>Sat, 05 Jul 2014 00:00:00 UTC</pubDate>
      
      <guid>http://www.xaprb.com/blog/2014/07/05/on-focus/</guid>
      <description>

&lt;p&gt;Focus is perhaps the most important attribute in an organization. In fact, my dictionary defines an organization as &amp;ldquo;an organized body of people with a particular purpose&amp;hellip;&amp;rdquo; A focused organization recognizes and cleaves to its purpose.&lt;/p&gt;

&lt;p&gt;Likewise, the ability to create and sustain focus is perhaps the most valuable skill of the organization&amp;rsquo;s members, including both individual contributors and leaders.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/media/2014/05/rainbokeh.jpg&#34; alt=&#34;Rainbokeh&#34; /&gt;
&lt;/p&gt;

&lt;h3 id=&#34;toc_0&#34;&gt;What Is Focus, And Why Is It Hard?&lt;/h3&gt;

&lt;p&gt;My dictionary says focus is &amp;ldquo;an act of concentrating.&amp;rdquo; Consider the root words: &lt;em&gt;concentrate&lt;/em&gt; literally means to bring to a common center, to be centered together.&lt;/p&gt;

&lt;p&gt;More broadly, I think of focus as a &lt;em&gt;resource&lt;/em&gt; similar to time, money, goodwill, and other more-or-less-fungible things. I claim that focus is usually an organization&amp;rsquo;s most valuable, most threatened, and scarcest resource.&lt;/p&gt;

&lt;p&gt;I base this claim on my life experience. I have never worked at an organization that was too focused. I have never heard anyone describe an organization objectively as doing too few things too thoroughly, prioritizing excellence in execution too highly. Focus always seems to be under pressure; there always seems to be a gravitational pull away from focus, towards distraction.&lt;/p&gt;

&lt;p&gt;Why is this? I believe it&amp;rsquo;s because ideas can be conceived in a flash, but execution takes time. In a moment of inspiration, I can envision a completed product or project. I can allow myself the thrill of dreaming about the benefits. How much better life would be with this-or-that! How much I would enjoy that! How much I&amp;rsquo;d like the satisfaction of having achieved this utopian ideal, this perfection!&lt;/p&gt;

&lt;p&gt;The sobering reality is that achieving such a vision takes a long time and goes through many unexpected detours. Focus is hard precisely because inspiration is fleeting. We&amp;rsquo;re drawn into the tedious, neverending details of execution, yet the goal appears to remain as far away as ever. We long for the satisfaction of accomplishment, and it&amp;rsquo;s human to desire it &lt;em&gt;now&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;In the middle of this struggle, this discipline of delaying gratification, it&amp;rsquo;s so tempting to daydream of new ideas again. It&amp;rsquo;s rewarding because the indulgence of &amp;ldquo;wouldn&amp;rsquo;t it be wonderful&amp;rdquo; thoughts actually creates surges of pleasure responses such as endorphins. Distraction is an enticing, seductive drug.&lt;/p&gt;

&lt;h3 id=&#34;toc_1&#34;&gt;Fear Is Anti-Focus&lt;/h3&gt;

&lt;p&gt;It can be demotivating to acknowledge the reality that achieving the dream is a marathon, not a sprint. This is actually a fear response. The thought &lt;em&gt;I&amp;rsquo;ll never finish&lt;/em&gt; is a lie; the truth is &lt;em&gt;I fear I&amp;rsquo;ll never finish&lt;/em&gt;. In fact, many of the reasons it can be hard to focus are just fear in different guises. New ideas are alluring in part due to the fear of what might happen if you don&amp;rsquo;t pursue them.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;If I don&amp;rsquo;t do this new thing I&amp;rsquo;ve just thought about, someone else will do it first.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;I might forget my new idea, or the reasons that I think it&amp;rsquo;s good.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;I might lose the opportunity to do it.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Fear is the voice of a pathological liar in your head. Fear says &lt;em&gt;this is real&lt;/em&gt; when the truth is &lt;em&gt;this isn&amp;rsquo;t real yet, but it could become real, and I wouldn&amp;rsquo;t like it if it did.&lt;/em&gt; You can see this by noting that fears are always about a potential future; if it&amp;rsquo;s reality already, you might suffer, but you won&amp;rsquo;t fear. And fears are not about the circumstance, but about your projected response to it. I wrote &lt;em&gt;wouldn&amp;rsquo;t like&lt;/em&gt; above, but the truth is &lt;em&gt;might not like&lt;/em&gt;. For example, the correct translation of &lt;em&gt;I fear getting old&lt;/em&gt; is &lt;em&gt;I fear that I might get old, and if I do, I might not like it&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Likewise, the appeal of a new idea is often partially infused with urgency, based on fear of what might happen if you don&amp;rsquo;t pursue the idea, and how you imagine you might feel about that outcome if it comes to pass.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/media/2014/05/perfection.jpg&#34; alt=&#34;Perfection&#34; /&gt;
&lt;/p&gt;

&lt;h3 id=&#34;toc_2&#34;&gt;Focus Is Worth Striving For&lt;/h3&gt;

&lt;p&gt;The benefit of focusing is simple: efficiency. The more concentrated your efforts, the more effective they&amp;rsquo;ll be. Your results will appear sooner, your work will flow more joyfully and easily, and your outcome will be better quality.&lt;/p&gt;

&lt;p&gt;If you examine some of the effects of distraction, the benefits of focus should become clear. I won&amp;rsquo;t belabor this point, but I&amp;rsquo;ll note that every new activity or idea has a compound effect. We tend to be biased to see the potential benefits much more than the likely drawbacks, which is part of why new ideas are so alluring. We see, for example, that a new product feature will enrich and enable and empower. But do we see that to do it right, we&amp;rsquo;re obligated to integrate it smoothly with all existing and future product features, to maintain it, to test it, to train, to document, to support? &lt;a href=&#34;http://firstround.com/article/the-one-cost-engineers-and-product-managers-dont-consider&#34;&gt;Usually not&lt;/a&gt;. We usually see compound benefits, but neglect to see compounded costs and risks, especially those that come from failure to execute fully and excellently.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Focus is putting what’s most important first and protecting its right to be there.
(typically by saying &amp;ldquo;No&amp;rdquo; to everything else) &amp;mdash; &lt;a href=&#34;http://vanessahurst.com/post/83405785577/focus-is-putting-whats-most-important-first-and&#34;&gt;Vanessa Hurst&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Many people I admire achieve amazing things precisely because they complete one thing and then build something new on top of it, rather than always having everything in a glorious state of perfect incompletion. The &amp;ldquo;secret&amp;rdquo; to their success is the willpower to patiently bring things to completion.&lt;/p&gt;

&lt;p&gt;In fact, I often think about focus in terms of WIP (work-in-progress), a term you&amp;rsquo;ll hear in Lean, Agile, Kanban, and other circles. Focus and WIP are inversely related. Focus is the ability to say &amp;ldquo;not yet,&amp;rdquo; to finish work in progress before starting new things.&lt;/p&gt;

&lt;p&gt;The danger of not doing this &amp;mdash; the danger of saying yes to opportunity &amp;mdash; is that you&amp;rsquo;ll load so much gold into the boat that you sink the whole thing. I find it helpful to consider each new opportunity or idea from this perspective.&lt;/p&gt;

&lt;p&gt;Can you have too much focus? Certainly, but it&amp;rsquo;s not focus. It&amp;rsquo;s perfectionism, which is another type of fear. In my experience, individuals can be perfectionists, but organizations &amp;mdash; I&amp;rsquo;ve never seen that. And even perfectionist individuals suffer from a perverse lack of focus, because they focus on the perfection of the thing they want to achieve, rather than the benefits they want to achieve. Focusing on the benefits you want is an antidote to perfectionism. I write from deep personal experience on this topic.&lt;/p&gt;

&lt;p&gt;I also want to point out that the type of execution-to-completion I&amp;rsquo;m discussing is emphatically not anti-Agile. Shipping early and often is part of getting something to completion as soon as possible, achieving the best final product, and lowering waste. Completion and excellence in execution are often conflated with perfectionism and reluctance to release partial work. They&amp;rsquo;re not the same, and treating them as synonymous is a huge mistake.&lt;/p&gt;

&lt;h3 id=&#34;toc_3&#34;&gt;The Politics Of Focus&lt;/h3&gt;

&lt;p&gt;If you&amp;rsquo;re a manager, it can be difficult to help your team stay focused, because you need to coach them through their natural impatience and discouragement without demotivating them. This is no easy thing, but nobody said management is easy.&lt;/p&gt;

&lt;p&gt;Although it&amp;rsquo;s true that &lt;a href=&#34;http://www.paperplanes.de/2014/6/2/focus-starts-by-saying-no.html&#34;&gt;focus starts with saying no&lt;/a&gt;, say it carefully. Someone who has a good idea that is struck down can easily take it personally, especially if the idea was rejected ingraciously. It helps to put the emphasis on the idea and not the person. It also helps to take the emphasis &lt;em&gt;away&lt;/em&gt; from the idea and draw it back towards the work in progress, and the outcome you&amp;rsquo;re working for &amp;mdash; to redirect the conversation into a &amp;ldquo;yes&amp;rdquo; for something else, instead of saying &amp;ldquo;no&amp;rdquo; to the idea itself.&lt;/p&gt;

&lt;p&gt;Another suggestion is to avoid saying &amp;ldquo;no&amp;rdquo; and to say &amp;ldquo;yes, later&amp;rdquo; instead. This is itself a way of focusing.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/media/2014/05/fossil.jpg&#34; alt=&#34;Shell&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Reminding people of the progress they&amp;rsquo;re making can also be helpful. While you&amp;rsquo;re in the weeds executing on a vision, progress becomes difficult to see. If you can help people remember what things were like a month ago, they might be reminded of how much progress they&amp;rsquo;re making.&lt;/p&gt;

&lt;p&gt;Another helpful reminder is that the distracting idea or opportunity isn&amp;rsquo;t a good thing &lt;em&gt;yet&lt;/em&gt;. It&amp;rsquo;s only the vision of the possibility of a good thing. This can segue nicely into rekindling passion for what&amp;rsquo;s currently underway:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Remember all the superior effort you&amp;rsquo;ve put into what you&amp;rsquo;ve done thus far, but which isn&amp;rsquo;t yet producing any benefit? Wouldn&amp;rsquo;t it be nice to see that through? Can you remember the original vision for that project, and how excited we were about making that a reality?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Be patient with people who have ideas you don&amp;rsquo;t want to pursue right away. Let them work through the ideas with you, help them come to terms with any fears (conscious or not), and use their passion and enthusiasm as a springboard for redirecting energy into the current project. Nothing kills the &lt;em&gt;esprit de corps&lt;/em&gt; quite as fast as a naysayer who just shuts things down.&lt;/p&gt;

&lt;h3 id=&#34;toc_4&#34;&gt;Evaluating Opportunities&lt;/h3&gt;

&lt;p&gt;Many ideas and opportunities &lt;em&gt;are&lt;/em&gt; worth considering seriously, and some are worth pursuing. Through experience I&amp;rsquo;ve stumbled onto a model that has worked for me thus far. It&amp;rsquo;s based on two questions that require considerable thought and care:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Are the current efforts and work-in-progress producing good outcomes?&lt;/li&gt;
&lt;li&gt;If we do more of the same (i.e. execute to the vision), will we magnify our existing success?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If the answers are yes, then it might not be best to engage in new ideas or opportunities, no matter how good they are. Beware of loading your plate with more than you need to eat. Ask yourself two additional questions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Are boredom and missed opportunities the only risks of staying the course we&amp;rsquo;ve set?&lt;/li&gt;
&lt;li&gt;Are novelty and expanded opportunity the main benefits of beginning something new?&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;toc_5&#34;&gt;Worldview&lt;/h3&gt;

&lt;p&gt;Focused organizations are made of focused people. It&amp;rsquo;s that simple. If your people can&amp;rsquo;t focus, then the organization will be less focused. If they can, then the organization can be single-minded.&lt;/p&gt;

&lt;p&gt;Speaking personally, my patience and ability to continue working on things that are in progress, and my reluctance to admit distraction, is not something I was born with. Remaining serene and keeping an eye on the goal is a skill that I believe anyone can nurture and grow.&lt;/p&gt;

&lt;p&gt;For me, it&amp;rsquo;s now part of my underlying worldview. I believe, and my experience has been, that whatever I focus on, whatever I give my attention to, will gradually become my reality. I believe that mindfulness &amp;mdash; the ability to observe choose my thoughts, and by proxy to direct my thoughts intentionally &amp;mdash; is the source of my ability to direct my life.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/media/2014/05/cityscape.jpg&#34; alt=&#34;Cityscape&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;When I was a child, I attended a workshop with Pat Parelli, a master horseman and trainer of people. His phrase has stayed with me through many years:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Causing is somewhere between making and letting.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;When I notice and release distracting thoughts, what is it but focus? When I choose my thoughts with care and intention, what is this other than focus?  And every time I do this, I &lt;em&gt;cause&lt;/em&gt; myself to contribute to my desired goals, by training myself to become better at giving attention to things I want, and withdrawing attention from things I don&amp;rsquo;t want.&lt;/p&gt;

&lt;h3 id=&#34;toc_6&#34;&gt;My Advice&lt;/h3&gt;

&lt;p&gt;My advice, should you wish to hear it, is to consider that mental effort defeats itself. You can&amp;rsquo;t force yourself to focus. The harder you try, the more you&amp;rsquo;ll spin your wheels. It must be effortless and relaxed.&lt;/p&gt;

&lt;p&gt;One way to avoid effort is to become interested in what you want. The ability to create genuine interest within yourself is a skill. You can do it if you can direct your thoughts to the things you want. And training yourself to be able to direct your thoughts is not only possible, it&amp;rsquo;s the single most valuable skill you could ever acquire, because it will multiply your efforts in every other area.&lt;/p&gt;

&lt;p&gt;Rather than fighting or working for focus, I suggest that you become a focused person through a daily practice of your choosing.&lt;/p&gt;

&lt;p&gt;Everyone&amp;rsquo;s practice will be different. The key is to find something that works for you, and is so rewarding that you find it indispensable &amp;mdash; something you &amp;ldquo;couldn&amp;rsquo;t live without.&amp;rdquo; If you don&amp;rsquo;t know where to start, ask advice from people you admire. If you want what they have gotten, consider doing what they have done. Look at anyone else in your life and assess them the same way.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ll give a couple of examples. One is mindfulness and meditation. For an example, see &lt;a href=&#34;http://www.feld.com/wp/archives/2014/04/meditation-narrative.html&#34;&gt;Brad Feld&amp;rsquo;s blog&lt;/a&gt;. He has written a great deal about the benefits he&amp;rsquo;s seen since beginning to practice meditation. His personal practice is based on the &lt;a href=&#34;http://www.getsomeheadspace.com/&#34;&gt;Headspace Project&lt;/a&gt;, which I can also say has worked well for me.&lt;/p&gt;

&lt;p&gt;The second example is Martin Luther (not Martin Luther King Jr), who is quoted as saying &amp;ldquo;I have so much to do that I shall spend the first three hours in prayer.&amp;rdquo; Beginning each day with intentionality gets things off on the right foot. I&amp;rsquo;m not sure that three hours is necessary for everyone. Three minutes works wonders for me.&lt;/p&gt;

&lt;p&gt;Third is physical activity. Many people find specific things conducive to focus: running, knitting, swimming, showering. If you can get some focus and quietude of mind doing something like that, then try to integrate it into the rest of your time as well. For me, it used to be rock climbing. That was the only time I felt focused.&lt;/p&gt;

&lt;p&gt;Now I use both prayer and meditation to achieve mindfulness every day and carry it through all my activities. Years ago I met an elderly man, an architect, who spoke of his lifelong practice of transcendental meditation and how beneficial it had been. I asked him to be my teacher, and he spent a lot of time coaching me in meditation.&lt;/p&gt;

&lt;p&gt;Ultimately I found I could not sustain the practice he passed on to me. Perhaps it was that I didn&amp;rsquo;t learn it well enough, or perhaps it just wasn&amp;rsquo;t quite right for me. Whatever the reason, it was something I &lt;em&gt;could&lt;/em&gt; live without, and because it was non-essential I gradually drifted out of the habit of doing it every day. After some time I found two small tweaks that made it much easier for me, and that made all the difference. (The tweaks were meditating for a slightly shorter time, and focusing on my breath instead of a mantra. Your mileage will vary.)&lt;/p&gt;

&lt;p&gt;I find the following pieces of scripture immensely inspiring:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;For where your treasure is, there will your heart be also. The light of the body is the eye: if therefore thine eye be single, thy whole body shall be full of light. &amp;mdash; Matthew 6:21-22&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;What does it mean for one&amp;rsquo;s &lt;em&gt;eye to be single&lt;/em&gt;? My interpretation is that it means to cast your attention on only one thing. The overall meaning I find in these verses is that choosing a goal, choosing to regard your goal as a treasure you desire, and concentrating on it, will motivate you towards creating that outcome.&lt;/p&gt;

&lt;p&gt;Finally, this is the essence of focus for me:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Be still, and know that I am God.
&amp;mdash; Psalm 46:10&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I wish you success in all your endeavours, and hope you&amp;rsquo;ve found this article helpful.&lt;/p&gt;

&lt;p&gt;Photo credits:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.flickr.com/photos/jdhancock/5177358991/&#34;&gt;https://www.flickr.com/photos/jdhancock/5177358991/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.flickr.com/photos/jjjohn/2387534678&#34;&gt;https://www.flickr.com/photos/jjjohn/2387534678&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.flickr.com/photos/80901381@N04/7649502498&#34;&gt;https://www.flickr.com/photos/80901381@N04/7649502498&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.flickr.com/photos/velvettears/5982590252/&#34;&gt;https://www.flickr.com/photos/velvettears/5982590252/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Meditate With Me At Velocity</title>
      <link>http://www.xaprb.com/blog/2014/06/24/meditate-at-velocity/</link>
      <pubDate>Tue, 24 Jun 2014 00:00:00 UTC</pubDate>
      
      <guid>http://www.xaprb.com/blog/2014/06/24/meditate-at-velocity/</guid>
      <description>&lt;p&gt;Join me and other &lt;a href=&#34;http://velocityconf.com/&#34;&gt;Velocity&lt;/a&gt; attendees during the Wednesday afternoon 2:40pm break for a 10-15 minute guided meditation session appropriate for people of any faith or of none.&lt;/p&gt;

&lt;p&gt;Meditation has a host of scientifically proven immediate and long-term benefits. If you get an extra 10% of clarity and effectiveness for the rest of the afternoon, you&amp;rsquo;ll end up learning more and making your conference experience more worthwhile.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/media/2014/06/stones.jpg&#34; alt=&#34;meditation&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ll guide you through a process of checking in and becoming aware of your body and mind. Then we&amp;rsquo;ll let the body rest until we come back for it, while we turn our attention to the breath for a few minutes. During this time we&amp;rsquo;ll notice and be gently curious about thoughts and feelings that spontaneously arise. Then we&amp;rsquo;ll bring our attention back to our bodies and senses, and finish with a few deep breaths.&lt;/p&gt;

&lt;p&gt;This practice is easy and nonjudgmental. Your mileage may vary, but I find that I&amp;rsquo;m able to take the resulting sense of calm and clarity with me into my other activities afterwards.&lt;/p&gt;

&lt;p&gt;We&amp;rsquo;ll begin at 3pm sharp, so please arrive a few minutes early. I haven&amp;rsquo;t yet finalized the meeting location. &lt;a href=&#34;https://twitter.com/xaprb&#34;&gt;Follow me on Twitter&lt;/a&gt; and when I settle on a good location, I&amp;rsquo;ll announce it. Retweet my announcement if you plan to join us, so I have a sense of how much room we&amp;rsquo;ll need.&lt;/p&gt;

&lt;p&gt;If you want to add this to your Google Calendar, here&amp;rsquo;s a &lt;a target=&#34;_blank&#34; href=&#34;https://www.google.com/calendar/event?action=TEMPLATE&amp;tmeid=djBmbGRuM2RhZm5rMjBwazc4Yml2b2RjOTAgYmFyb25Adml2aWRjb3J0ZXguY29t&amp;tmsrc=baron%40vividcortex.com&#34;&gt;link to an event&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.flickr.com/photos/villamon/4468869725/&#34;&gt;Pic Credit&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Unfixable Code</title>
      <link>http://www.xaprb.com/blog/2014/06/21/unfixable-code/</link>
      <pubDate>Sat, 21 Jun 2014 00:00:00 UTC</pubDate>
      
      <guid>http://www.xaprb.com/blog/2014/06/21/unfixable-code/</guid>
      <description>&lt;p&gt;Over the years I&amp;rsquo;ve come to believe something that I&amp;rsquo;m not sure others will
agree with. I would like to hear your point of view on it.&lt;/p&gt;

&lt;p&gt;I posit that some code can become literally unfixable. Programmers can paint
themselves into a corner with the code and it becomes impossible to get out
again.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/media/2014/06/humpty.jpg&#34; alt=&#34;humpty&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;The scenario arises when a specific set of conditions exists:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the code is difficult to work with for some reason &amp;mdash; inherent complexity, badly written code, whatever&lt;/li&gt;
&lt;li&gt;the code is not tested and is not written to be testable&lt;/li&gt;
&lt;li&gt;bugs are high-stakes, so changes are extremely risky&lt;/li&gt;
&lt;li&gt;the code needs to be changed for some reason (it&amp;rsquo;s buggy or doesn&amp;rsquo;t fulfill its requirements)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This situation is a deadlock. I can&amp;rsquo;t leave the code as it is, because it
has bugs that are causing problems that need to be fixed. I can&amp;rsquo;t change the
code, or I&amp;rsquo;ll cause bugs that may be truly serious in a variety of ways. I can&amp;rsquo;t
test the code, because it&amp;rsquo;s untestable the way it&amp;rsquo;s written. I can&amp;rsquo;t refactor it
to be testable for the same reasons I can&amp;rsquo;t just change it in the first place.&lt;/p&gt;

&lt;p&gt;I have encountered such code many times in my career. I&amp;rsquo;ve also met people who
say they can fix any code with enough work. I haven&amp;rsquo;t seen that happen. The only
solution I&amp;rsquo;ve seen is a complete replacement, rewriting from scratch.&lt;/p&gt;

&lt;p&gt;What do you think?&lt;/p&gt;

&lt;p&gt;PS: I remember seeing claims that if more than a small amount (10% or so, as I
recall?) of a program&amp;rsquo;s code needs to be modified, a rewrite from scratch will
be a better outcome in less time. If you can find any sources for that claim,
please leave them in the comments.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Two of My Favorite Conferences: Velocity and Surge</title>
      <link>http://www.xaprb.com/blog/2014/06/18/my-favorite-conferences-velocity-surge/</link>
      <pubDate>Wed, 18 Jun 2014 00:00:00 UTC</pubDate>
      
      <guid>http://www.xaprb.com/blog/2014/06/18/my-favorite-conferences-velocity-surge/</guid>
      <description>

&lt;p&gt;Two of my favorite conferences are coming up. One&amp;rsquo;s just next week, and
another&amp;rsquo;s in the fall.&lt;/p&gt;

&lt;h3 id=&#34;toc_0&#34;&gt;Velocity&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://www.kqzyfj.com/click-7094008-11742203&#34;&gt;Velocity&lt;/a&gt; is such a great event.
I wanted to go for years, and when I finally did it was honestly one of the
highlights of my professional career. I still don&amp;rsquo;t know what I did get get
invited to speak that first year. It was a golden horseshoe falling out of the
sky and landing right in front of me.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/media/2014/06/velocity.png&#34; alt=&#34;Velocity&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s not the talks (though those are great). It&amp;rsquo;s the people. The people
at Velocity are the people I want to spend my career with, the people thinking
about the same types of problems I am, the people trying to work on similar
solutions. They&amp;rsquo;re building companies, they&amp;rsquo;re making open source, they&amp;rsquo;re
customers, they&amp;rsquo;re consultants, they&amp;rsquo;re just passionate practitioners. It&amp;rsquo;s just
amazing what happens when this kind of group gets together.&lt;/p&gt;

&lt;p&gt;And yeah, it&amp;rsquo;s partially because I&amp;rsquo;m a loyal O&amp;rsquo;Reilly fan. I admit it: I love
O&amp;rsquo;Reilly, I truly do. It&amp;rsquo;s a remarkable group of people that has inspired me for
more than a decade, and I owe a lot of who I am to O&amp;rsquo;Reilly.&lt;/p&gt;

&lt;p&gt;Velocity starts next Tuesday in Santa Clara. If you don&amp;rsquo;t go to that one,
there&amp;rsquo;s several other incarnations in New York, Barcelona, and Beijing at
different times of the year. I&amp;rsquo;ll be in Santa Clara next week, in the
&lt;a href=&#34;https://vividcortex.com/&#34;&gt;VividCortex&lt;/a&gt; booth. Come say hi if you&amp;rsquo;re there.&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s an affiliate link that has a 20% discount code embedded in it:
&lt;a href=&#34;http://www.kqzyfj.com/click-7094008-11742203&#34;&gt;Velocity AFF20&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;toc_1&#34;&gt;Surge&lt;/h3&gt;

&lt;p&gt;I&amp;rsquo;ve often said that &lt;a href=&#34;http://surge.omniti.com/&#34;&gt;Surge&lt;/a&gt; is Velocity without the grandiosity and with more
emphasis on hardcore software and systems engineering &amp;mdash; and a much smaller
price tag.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/media/2014/06/surge.png&#34; alt=&#34;Surge&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve been at every Surge event since the beginning, and I would not miss it.
It&amp;rsquo;s that good. I can say all the same things about Surge as I can about
Velocity, except it&amp;rsquo;s a lot easier and less expensive to get to, and it&amp;rsquo;s a lot
easier to decide to attend the talks there. At Velocity sometimes I feel lost
because the event is so big, and I end up not really attending many
presentations, and just hanging out in the hallway track. Not so at Surge.
Bonus: talks are always recorded and online, so you can go find out for yourself
how good they are.&lt;/p&gt;

&lt;p&gt;The climate at Surge is also quite different in terms of the topics. Velocity is
ostensibly about the Web: backend, frontend, browser, and mobile are front and
center. As a result, you can certainly find yourself in an unfamiliar clique, if
you&amp;rsquo;re, say, a database administrator at a lunch table full of people who want to
argue about how much hardware acceleration will save battery life in a mobile
browser. Whether that bothers you or not is up to you, but I&amp;rsquo;ve found that Surge
is birds of my feather for sure. It&amp;rsquo;s all about people who build what runs the
Internet (not necessarily what you use to engage with the Internet).&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m pretty loyal to the folks behind Surge, too. For one thing, a lot of them
are the same people who make Velocity awesome. For another, many of them have
helped me tremendously in my career and in founding VividCortex.&lt;/p&gt;

&lt;p&gt;Surge is in early-bird pricing right now. Having run conferences before, I know
why early-bird pricing exists. If you think you&amp;rsquo;ll attend, do yourself and them
a favor and sign up at a discount now. Here, click &lt;a href=&#34;http://surge.omniti.com/2014&#34;&gt;this&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;toc_2&#34;&gt;Conclusions&lt;/h3&gt;

&lt;p&gt;There are no conclusions. Conferences are good. I love Velocity. I love Surge.
Go. Learn a lot. Share a lot. Make the world a better place.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>