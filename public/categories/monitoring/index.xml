<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Monitoring on Xaprb </title>
      <generator uri="https://hugo.spf13.com">Hugo</generator>
    <link>http://www.xaprb.com/categories/monitoring/index.xml/</link>
    
    
    
    <updated>Wed, 21 Mar 2012 00:00:00 UTC</updated>
    
    <item>
      <title>MySQL monitoring meetup tonight!</title>
      <link>http://www.xaprb.com/blog/2012/03/21/mysql-monitoring-meetup-tonight/</link>
      <pubDate>Wed, 21 Mar 2012 00:00:00 UTC</pubDate>
      
      <guid>http://www.xaprb.com/blog/2012/03/21/mysql-monitoring-meetup-tonight/</guid>
      <description>&lt;p&gt;Here&amp;rsquo;s your spammy day-of reminder about tonight&amp;rsquo;s free MySQL meetup. The topic is &lt;a href=&#34;http://www.meetup.com/Central-Virginia-MySQL-Meetup/events/53029362/&#34;&gt;MySQL Monitoring Bonanza&lt;/a&gt;. There will be beer, pizza, pretty charts and graphs, and friends. Free as in beer (and pizza, did I mention that?)!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: &lt;a href=&#34;https://vividcortex.com/&#34;&gt;VividCortex&lt;/a&gt; is the startup I founded in 2012. It&amp;rsquo;s the easiest way to monitor what
your servers are doing in production. VividCortex offers &lt;a href=&#34;https://vividcortex.com/monitoring/mysql/&#34;&gt;MySQL performance
monitoring&lt;/a&gt; and &lt;a href=&#34;https://vividcortex.com/monitoring/postgres/&#34;&gt;PostgreSQL
performance management&lt;/a&gt; among many
other features.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Free webinar on monitoring MySQL</title>
      <link>http://www.xaprb.com/blog/2012/03/19/free-webinar-on-monitoring-mysql/</link>
      <pubDate>Mon, 19 Mar 2012 00:00:00 UTC</pubDate>
      
      <guid>http://www.xaprb.com/blog/2012/03/19/free-webinar-on-monitoring-mysql/</guid>
      <description>&lt;p&gt;If you follow what Percona is up to, you might have noticed that I&amp;rsquo;ve created a set of high-quality monitoring and graphing plugins for MySQL and related systems. Currently they support Nagios and Cacti. I&amp;rsquo;ll give a &lt;a href=&#34;http://www.percona.com/webinars/2012-03-28-monitoring-mysql-with-percona-monitoring-plugins/&#34;&gt;free webinar on March 28th&lt;/a&gt; discussing these, and more broadly, discussing how to monitor MySQL successfully to avoid common problems like spammy alerts about nonexistent problems.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://vividcortex.com/&#34;&gt;VividCortex&lt;/a&gt; is the startup I founded in 2012. It&amp;rsquo;s the easiest way to monitor what
your servers are doing in production and I consider it far superior to Cacti. VividCortex offers &lt;a href=&#34;https://vividcortex.com/monitoring/mysql/&#34;&gt;MySQL performance
monitoring&lt;/a&gt; and &lt;a href=&#34;https://vividcortex.com/monitoring/postgres/&#34;&gt;PostgreSQL
performance management&lt;/a&gt; among many
other features.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Version 1.1.8 of Better Cacti Templates released</title>
      <link>http://www.xaprb.com/blog/2011/01/22/version-1-1-8-of-better-cacti-templates-released/</link>
      <pubDate>Sat, 22 Jan 2011 00:00:00 UTC</pubDate>
      
      <guid>http://www.xaprb.com/blog/2011/01/22/version-1-1-8-of-better-cacti-templates-released/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve released version 1.1.8 of the &lt;a href=&#34;http://code.google.com/p/mysql-cacti-templates/&#34;&gt;Better Cacti Templates&lt;/a&gt; project. This release includes a bunch of bug fixes and several important new graphs. There are &lt;a href=&#34;http://code.google.com/p/mysql-cacti-templates/wiki/MySQLTemplates#MySQL_Query_Response_Time_%28Microseconds%29&#34;&gt;graphs&lt;/a&gt; for the new &lt;a href=&#34;http://www.percona.com/docs/wiki/percona-server:features:response_time_distribution&#34;&gt;response-time statistics exposed in Percona Server&lt;/a&gt;, and a new set of graphs for &lt;a href=&#34;http://code.google.com/p/mysql-cacti-templates/wiki/MongoDBTemplates&#34;&gt;MongoDB&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://vividcortex.com/&#34;&gt;VividCortex&lt;/a&gt; is the startup I founded in 2012. It&amp;rsquo;s the easiest way to monitor what
your servers are doing in production and I consider it far superior to Cacti. VividCortex offers &lt;a href=&#34;https://vividcortex.com/monitoring/mysql/&#34;&gt;MySQL performance
monitoring&lt;/a&gt; and &lt;a href=&#34;https://vividcortex.com/monitoring/postgres/&#34;&gt;PostgreSQL
performance management&lt;/a&gt; among many
other features.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;There are &lt;a href=&#34;http://code.google.com/p/mysql-cacti-templates/wiki/UpgradingTemplates&#34;&gt;upgrade instructions&lt;/a&gt; on the project wiki for this and all releases. There is also a comprehensive tutorial on &lt;a href=&#34;http://code.google.com/p/mysql-cacti-templates/wiki/CreatingGraphs&#34;&gt;how to create your own graphs and templates&lt;/a&gt; with this project. Use the &lt;a href=&#34;http://code.google.com/p/mysql-cacti-templates/issues/list&#34;&gt;project issue tracker&lt;/a&gt; (&lt;strong&gt;not the comments on this post!&lt;/strong&gt;) to view and report issues, and use the &lt;a href=&#34;http://groups.google.com/group/better-cacti-templates&#34;&gt;project mailing list&lt;/a&gt; to discuss the templates and scripts.&lt;/p&gt;

&lt;p&gt;The full changelog follows.&lt;/p&gt;

&lt;pre&gt;
2011-01-22: version 1.1.8

  * The cache file names could conflict due to omitting --port (issue 171).
  * Load-average parsing did not work correctly at high load (issue 170).
  * The --mpds option to make-template.pl did not create new inputs (issue 133).
  * The url and port were reversed in the Nginx commandline (issue 149).
  * Added $nc_cmd to ss_get_by_ssh.php (issue 154, issue 152).
  * InnoDB Transactions and other graphs showed NaN instead of 0 (issue 159).
  * Added graphs for Percona Server response-time distribution (issue 158).
  * Added graphs for MongoDB (issue 136).
  * Added a minimum option to the template construction logic (issue 169).
  * Added memtotal for Memory (issue 146).
  * make-template.pl sanity checks were too strict (issue 168).
&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>A better way to build Cacti templates</title>
      <link>http://www.xaprb.com/blog/2010/05/25/a-better-way-to-build-cacti-templates/</link>
      <pubDate>Tue, 25 May 2010 00:00:00 UTC</pubDate>
      
      <guid>http://www.xaprb.com/blog/2010/05/25/a-better-way-to-build-cacti-templates/</guid>
      <description>&lt;p&gt;The traditional way to build Cacti templates is through the Cacti web interface. This is an &lt;em&gt;enormous&lt;/em&gt; amount of work, and the result is generally not very consistent or good quality. The process is too error-prone. You can export the templates as XML, but they tend to have problems such as version incompatibilities with other Cacti installations, and it&amp;rsquo;s hard to adapt them for user preferences such as different graph image sizes and polling intervals.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://vividcortex.com/&#34;&gt;VividCortex&lt;/a&gt; is the startup I founded in 2012. It&amp;rsquo;s the easiest way to monitor what
your servers are doing in production and I consider it far superior to Cacti. VividCortex offers &lt;a href=&#34;https://vividcortex.com/monitoring/mysql/&#34;&gt;MySQL performance
monitoring&lt;/a&gt; and &lt;a href=&#34;https://vividcortex.com/monitoring/postgres/&#34;&gt;PostgreSQL
performance management&lt;/a&gt; among many
other features.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The way I build Cacti templates is exactly the opposite. I create a data structure in a file, which looks like many configuration file syntaxes you&amp;rsquo;ve probably worked with. It represents the graphs, templates, scripts, and so on. From this, a tool generates the XML template file, which is a universal template definition, and is a breeze to import into Cacti. It is completely consistent and has zero cruft in it. This process prevents errors, and the results are perfect every time. (There&amp;rsquo;s a test suite, by the way.)&lt;/p&gt;

&lt;p&gt;All the tools, documentation, how-tos, examples, and pre-fabricated scripts and templates you need are at the &lt;a href=&#34;http://code.google.com/p/mysql-cacti-templates/&#34;&gt;Better Cacti Templates&lt;/a&gt; open-source project. If you want to build your own templates, pay special attention to &lt;a href=&#34;http://code.google.com/p/mysql-cacti-templates/wiki/CreatingGraphs&#34;&gt;the documentation on creating graphs&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Version 1.1.7 of Better Cacti Templates released</title>
      <link>http://www.xaprb.com/blog/2010/04/20/version-1-1-7-of-better-cacti-templates-released/</link>
      <pubDate>Tue, 20 Apr 2010 00:00:00 UTC</pubDate>
      
      <guid>http://www.xaprb.com/blog/2010/04/20/version-1-1-7-of-better-cacti-templates-released/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve released version 1.1.7 of the &lt;a href=&#34;http://code.google.com/p/mysql-cacti-templates/&#34;&gt;Better Cacti Templates&lt;/a&gt; project. This release includes a bunch of bug fixes, some new graphs for MySQL, and two new sets of graphs, for Redis graphing and for JMX graphing.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://vividcortex.com/&#34;&gt;VividCortex&lt;/a&gt; is the startup I founded in 2012. It&amp;rsquo;s the easiest way to monitor what
your servers are doing in production and I consider it far superior to Cacti. VividCortex offers &lt;a href=&#34;https://vividcortex.com/monitoring/mysql/&#34;&gt;MySQL performance
monitoring&lt;/a&gt; and &lt;a href=&#34;https://vividcortex.com/monitoring/postgres/&#34;&gt;PostgreSQL
performance management&lt;/a&gt; among many
other features.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;There are &lt;a href=&#34;http://code.google.com/p/mysql-cacti-templates/wiki/UpgradingTemplates&#34;&gt;upgrade instructions&lt;/a&gt; on the project wiki for this and all releases. There is also a comprehensive tutorial on &lt;a href=&#34;http://code.google.com/p/mysql-cacti-templates/wiki/CreatingGraphs&#34;&gt;how to create your own graphs and templates&lt;/a&gt; with this project. Use the &lt;a href=&#34;http://code.google.com/p/mysql-cacti-templates/issues/list&#34;&gt;project issue tracker&lt;/a&gt; to view and report issues, and use the &lt;a href=&#34;http://groups.google.com/group/better-cacti-templates&#34;&gt;project mailing list&lt;/a&gt; to discuss the templates and scripts.&lt;/p&gt;

&lt;p&gt;The full changelog follows.&lt;/p&gt;

&lt;pre&gt;
  * Added graphs for Innodb_row_lock_waits and Innodb_row_lock_time (issue 118).
  * Added graphs for the MyISAM key buffer memory consumption (issue 127).
  * The loadavg/users graphs failed when only 1 user was logged in (issue 131).
  * The Apache and Nginx graphs couldn&#39;t use the --port2 option (issue 129).
  * The InnoDB Log graph&#39;s unflushed_log should be GAUGE not COUNTER (issue 10).
  * Added graphs for InnoDB semaphore waits (issue 124).
  * Added Redis graphs (issue 90).
  * Added --openvz_cmd configuration and command-line option (issue 130).
  * Added --mysql_ssl configuration and command-line option (issue 103).
  * Added JMX graphs (--type jmx) (issue 139).
  * Big-integer math printf spec was missing a % character (issue 137).
  * Partially accepted patches from Artur Kaszuba (more remaining in issue 120).
&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Version 1.1.6 of Better Cacti Templates released</title>
      <link>http://www.xaprb.com/blog/2010/01/10/version-1-1-6-of-better-cacti-templates-released/</link>
      <pubDate>Sun, 10 Jan 2010 00:00:00 UTC</pubDate>
      
      <guid>http://www.xaprb.com/blog/2010/01/10/version-1-1-6-of-better-cacti-templates-released/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve released version 1.1.6 of the &lt;a href=&#34;http://code.google.com/p/mysql-cacti-templates/&#34;&gt;Better Cacti Templates&lt;/a&gt; project. This release includes a bunch of bug fixes (but not all of them!) and two new sets of graphs. One set is for disk I/O on GNU/Linux, and the other is a new set of templates for OpenVZ. I&amp;rsquo;m looking for feedback on both of those. This release also has a bunch of code-level features: much better test coverage (hooray!), and a refactored ss_get_by_ssh.php that makes it much easier to create new graphs and templates. The SSH-based templates also take advantage of the same caching as the MySQL templates, which makes them a lot more efficient.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://vividcortex.com/&#34;&gt;VividCortex&lt;/a&gt; is the startup I founded in 2012. It&amp;rsquo;s the easiest way to monitor what
your servers are doing in production and I consider it far superior to Cacti. VividCortex offers &lt;a href=&#34;https://vividcortex.com/monitoring/mysql/&#34;&gt;MySQL performance
monitoring&lt;/a&gt; and &lt;a href=&#34;https://vividcortex.com/monitoring/postgres/&#34;&gt;PostgreSQL
performance management&lt;/a&gt; among many
other features.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;There are &lt;a href=&#34;http://code.google.com/p/mysql-cacti-templates/wiki/UpgradingTemplates&#34;&gt;upgrade instructions&lt;/a&gt; on the project wiki for this and all releases. There is also a comprehensive tutorial on &lt;a href=&#34;http://code.google.com/p/mysql-cacti-templates/wiki/CreatingGraphs&#34;&gt;how to create your own graphs and templates&lt;/a&gt; with this project. Use the &lt;a href=&#34;http://code.google.com/p/mysql-cacti-templates/issues/list&#34;&gt;project issue tracker&lt;/a&gt; to view and report issues, and use the &lt;a href=&#34;http://groups.google.com/group/better-cacti-templates&#34;&gt;project mailing list&lt;/a&gt; to discuss the templates and scripts.&lt;/p&gt;

&lt;p&gt;The full changelog follows.&lt;/p&gt;

&lt;pre&gt;
2010-01-10: version 1.1.6

  * Added OpenVZ graphs (--type openvz) (issue 95).
  * Added IO usage graphs (--type diskstats) (issue 97).
  * Added extra error-reporting (issue 110).
  * The $debug $debug_log options couldn&#39;t be set in the .cnf file (issue 110).
  * Added a --use-ssh option to ss_get_by_ssh.php (issue 66).
  * Added a debugging log to ss_get_by_ssh.php (issue 54).
  * Enabled caching of results in ss_get_by_ssh.php (issue 46).
  * Added a test suite for ss_get_by_ssh.php (issue 110).
  * The &#39;free&#39; stats suffered from PHP&#39;s issues with big numbers (issue 102).
  * There was ambiguity (but no error) in SHOW STATUS overrides (issue 106).
  * It was hard to debug failures caused by missing ext/mysql (issue 105).
  * Code to make ss_get_mysql_stats.php testable was broken (issue 108).
&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>A Review of Cacti Network Monitoring by Kundu and Lavlu</title>
      <link>http://www.xaprb.com/blog/2010/01/09/review-cacti-network-monitoring-kundu-lavlu/</link>
      <pubDate>Sat, 09 Jan 2010 00:00:00 UTC</pubDate>
      
      <guid>http://www.xaprb.com/blog/2010/01/09/review-cacti-network-monitoring-kundu-lavlu/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.amazon.com/Cacti-Network-Monitoring-Ibrahim-Lavlu/dp/1847195962?tag=xaprb-20&#34;&gt;&lt;img src=&#34;http://www.xaprb.com/media/2010/01/cacti-network-monitoring.jpg&#34; alt=&#34;Cacti Network Monitoring&#34; title=&#34;Cacti Network Monitoring&#34; width=&#34;240&#34; height=&#34;240&#34; class=&#34;size-full wp-image-1531&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://vividcortex.com/&#34;&gt;VividCortex&lt;/a&gt; is the startup I founded in 2012. It&amp;rsquo;s the easiest way to monitor what
your servers are doing in production and I consider it far superior to Cacti. VividCortex offers &lt;a href=&#34;https://vividcortex.com/monitoring/mysql/&#34;&gt;MySQL performance
monitoring&lt;/a&gt; and &lt;a href=&#34;https://vividcortex.com/monitoring/postgres/&#34;&gt;PostgreSQL
performance management&lt;/a&gt; among many
other features.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&#34;http://www.amazon.com/Cacti-Network-Monitoring-Ibrahim-Lavlu/dp/1847195962?tag=xaprb-20&#34;&gt;Cacti 0.8 Network Monitoring&lt;/a&gt;, Dinangkur Kundu and S. M. Ibrahim Lavlu, Packt, 2009. Page count: 110 pages.&lt;/p&gt;

&lt;p&gt;This is a quite short book that covers some of the breadth but very little of the depth of Cacti. For example, it focuses on Cacti as an SNMP tool for graphing network data, but SNMP is only one of the many ways Cacti can collect data, and of course it graphs anything, not just networks. Each chapter takes the reader through the most important topics, with some code listings and screenshots. On the plus side, this makes it very easy to read quickly, because it doesn&amp;rsquo;t go off on many tangents about special cases and errors.&lt;/p&gt;

&lt;p&gt;I don&amp;rsquo;t want to criticize too much, but I think I should give a summary of the major shortcomings. First, the book is just too small, especially for the price. It is also not very well edited; it seems to have been edited by non-English speakers. Finally, it constantly refers to Cacti as a monitoring tool, even talking about the need to find out about crashed equipment and so on &amp;ndash; but it doesn&amp;rsquo;t clearly say that Cacti is only for performance graphing, not for monitoring and alerting. I wish they had not flung the word &amp;ldquo;monitoring&amp;rdquo; around so casually.&lt;/p&gt;

&lt;p&gt;In terms of topics, it has an overview, installation, creating graphs, creating templates, managing users, SNMP, data queries, and basic administration. The strongest point is the explanation of SNMP. The other chapters have a lot of needless information and screenshots. The installation chapter, for example, goes through installing prerequisites from APT &amp;ndash; which APT can do itself.&lt;/p&gt;

&lt;p&gt;In the end it&amp;rsquo;s light reading that shouldn&amp;rsquo;t take you long to finish &amp;ndash; an overview in case you don&amp;rsquo;t know much about Cacti.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Vote for Cacti template enhancements</title>
      <link>http://www.xaprb.com/blog/2009/12/30/vote-for-cacti-template-enhancements/</link>
      <pubDate>Wed, 30 Dec 2009 00:00:00 UTC</pubDate>
      
      <guid>http://www.xaprb.com/blog/2009/12/30/vote-for-cacti-template-enhancements/</guid>
      <description>&lt;p&gt;If you&amp;rsquo;d like some improvements to the Cacti templates (MySQL, Apache, Memcached, and more) I&amp;rsquo;ve been maintaining, please make your voice heard &amp;ndash; either write to the &lt;a href=&#34;http://groups.google.com/group/better-cacti-templates&#34;&gt;mailing list&lt;/a&gt;, or post a new issue (or comment on an existing one) on the &lt;a href=&#34;http://code.google.com/p/mysql-cacti-templates/issues/list&#34;&gt;issue list&lt;/a&gt;. I&amp;rsquo;ve got a bunch of work underway, including a test suite for ss_get_by_ssh.php.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://vividcortex.com/&#34;&gt;VividCortex&lt;/a&gt; is the startup I founded in 2012. It&amp;rsquo;s the easiest way to monitor what
your servers are doing in production and I consider it far superior to Cacti. VividCortex offers &lt;a href=&#34;https://vividcortex.com/monitoring/mysql/&#34;&gt;MySQL performance
monitoring&lt;/a&gt; and &lt;a href=&#34;https://vividcortex.com/monitoring/postgres/&#34;&gt;PostgreSQL
performance management&lt;/a&gt; among many
other features.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Version 1.1.5 of improved Cacti templates released</title>
      <link>http://www.xaprb.com/blog/2009/12/13/version-1-1-5-of-improved-cacti-templates-released/</link>
      <pubDate>Sun, 13 Dec 2009 00:00:00 UTC</pubDate>
      
      <guid>http://www.xaprb.com/blog/2009/12/13/version-1-1-5-of-improved-cacti-templates-released/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve released version 1.1.5 of my &lt;a href=&#34;http://code.google.com/p/mysql-cacti-templates/&#34;&gt;improved Cacti templates&lt;/a&gt; for MySQL and other components of a LAMP application. This is a pure bug-fix release. One of the bug fixes prevents spikes in graphs, but requires you to rebuild your RRD files. There are &lt;a href=&#34;http://code.google.com/p/mysql-cacti-templates/wiki/UpgradingTemplates&#34;&gt;upgrade instructions&lt;/a&gt; on the project wiki for this and all releases. Use the &lt;a href=&#34;http://code.google.com/p/mysql-cacti-templates/issues/list&#34;&gt;project issue tracker&lt;/a&gt; to view and report issues, and use the &lt;a href=&#34;http://groups.google.com/group/better-cacti-templates&#34;&gt;project mailing list&lt;/a&gt; to discuss the templates and scripts.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://vividcortex.com/&#34;&gt;VividCortex&lt;/a&gt; is the startup I founded in 2012. It&amp;rsquo;s the easiest way to monitor what
your servers are doing in production and I consider it far superior to Cacti. VividCortex offers &lt;a href=&#34;https://vividcortex.com/monitoring/mysql/&#34;&gt;MySQL performance
monitoring&lt;/a&gt; and &lt;a href=&#34;https://vividcortex.com/monitoring/postgres/&#34;&gt;PostgreSQL
performance management&lt;/a&gt; among many
other features.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The full changelog follows:&lt;/p&gt;

&lt;pre&gt;2009-12-13: version 1.1.5

  * Support for getting slave lag via mk-heartbeat was broken (issue 87).
  * The memcached stats command hung because it lacked &#34;quit&#34; (issue 65).
  * The COUNTER data type caused spikes; switched to DERIVE instead (issue41).
  * LOCK WAIT in an InnoDB transaction could cause an error (issue 91).
  * The cache file name didn&#39;t include the MySQL port (issue 82).
  * Added the -q option to the SSH command to quell missing homedir warnings.
  * The --port option to the MySQL templates could not be null.
  * The log_bytes_flushed and log_bytes_written were renamed (issue 81).
&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Version 1.1.4 of improved Cacti templates released</title>
      <link>http://www.xaprb.com/blog/2009/10/25/version-1-1-4-of-improved-cacti-templates-released/</link>
      <pubDate>Sun, 25 Oct 2009 00:00:00 UTC</pubDate>
      
      <guid>http://www.xaprb.com/blog/2009/10/25/version-1-1-4-of-improved-cacti-templates-released/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve released version 1.1.4 of my &lt;a href=&#34;http://code.google.com/p/mysql-cacti-templates/&#34;&gt;improved Cacti templates&lt;/a&gt;. Unlike the prior release, which was solely bug fixes, this one includes new graphs in the MySQL template. Some of the graphs are of data that&amp;rsquo;s exposed in standard MySQL versions, but some of it is available only in &lt;a href=&#34;http://www.percona.com/percona-lab.html&#34;&gt;Percona&amp;rsquo;s high-performance builds of the MySQL database server&lt;/a&gt;. If you don&amp;rsquo;t have a Percona build, those graphs will just contain nothing, but there is no detrimental effect.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://vividcortex.com/&#34;&gt;VividCortex&lt;/a&gt; is the startup I founded in 2012. It&amp;rsquo;s the easiest way to monitor what
your servers are doing in production and I consider it far superior to Cacti. VividCortex offers &lt;a href=&#34;https://vividcortex.com/monitoring/mysql/&#34;&gt;MySQL performance
monitoring&lt;/a&gt; and &lt;a href=&#34;https://vividcortex.com/monitoring/postgres/&#34;&gt;PostgreSQL
performance management&lt;/a&gt; among many
other features.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This template release is fully backwards compatible with the previous release. The upgrade process is to copy the new PHP file into place and import the new template file. You can then add the new graphs to your hosts.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve also taken the opportunity to address many of the other open issues. Most of these were minor, such as a debug log to help troubleshoot. Some are big improvements, such as no longer using GET_LOCK() in MySQL to arbitrate access to the cache file. A list of open issues can always be found at &lt;a href=&#34;http://code.google.com/p/mysql-cacti-templates/issues/list&#34;&gt;http://code.google.com/p/mysql-cacti-templates/issues/list&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To ease the process of future upgrades, I&amp;rsquo;ve also added in a gratuitous GPRINT definition, which is unused and merely records the installed version of the template (both the template version, and the version of the PHP file against which it was generated).&lt;/p&gt;

&lt;p&gt;The full changelog follows.&lt;/p&gt;

&lt;pre&gt;
2009-10-25: version 1.1.4

        * Changed SSH options so host keys are accepted automatically (issue 68).
        * Parsing of the pending_ibuf_aio_reads property was broken.
        * Parsing of the pending_aio_log_ios property was broken.
        * Parsing of the pending_aio_sync_ios property was broken.
        * Added a debugging log for ss_get_mysql_stats.php (issue 54).
        * Added the --lint_check option to make-template.pl (issue 80).
        * Removed the use of GET_LOCK() and changed to flock() instead (issue 78).
        * The template and script version is now recorded in a GPRINT (issue 79).
        * Restored unflushed_log, which was accidentally deleted in 1.1.3.
        * Added the InnoDB Internal Hash Memory Usage graph (issue 75).
        * Added the InnoDB Checkpoint Age graph (issue 73).
        * Added the InnoDB Insert Buffer Usage graph (issue 74).
        * Added the InnoDB Active/Locked Transactions graph.
        * Added the InnoDB Memory Allocation graph.
        * Added the InnoDB Adaptive Hash Index graph.
        * Added the InnoDB Tables In Use graph (issue 32).
        * Added the InnoDB Current Lock Waits graph.
        * Added the InnoDB Lock Structures graph (issue 32).
&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Version 1.1.3 of improved Cacti graphs for MySQL released</title>
      <link>http://www.xaprb.com/blog/2009/10/24/version-1-1-3-of-improved-cacti-graphs-for-mysql-released/</link>
      <pubDate>Sat, 24 Oct 2009 00:00:00 UTC</pubDate>
      
      <guid>http://www.xaprb.com/blog/2009/10/24/version-1-1-3-of-improved-cacti-graphs-for-mysql-released/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve just released version 1.1.3 of the &lt;a href=&#34;http://code.google.com/p/mysql-cacti-templates/&#34;&gt;Cacti templates I wrote for MySQL&lt;/a&gt;. This is a bug-fix release only, and affects only ss_get_mysql_stats.php. To upgrade from the previous release, upgrade ss_get_mysql_stats.php. Don&amp;rsquo;t forget to save and restore your configuration options, if any. (Note that there is a feature to help with this: you can keep configuration options in ss_get_mysql_stats.php.cnf to avoid making them in ss_get_mysql_stats.php.)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://vividcortex.com/&#34;&gt;VividCortex&lt;/a&gt; is the startup I founded in 2012. It&amp;rsquo;s the easiest way to monitor what
your servers are doing in production and I consider it far superior to Cacti. VividCortex offers &lt;a href=&#34;https://vividcortex.com/monitoring/mysql/&#34;&gt;MySQL performance
monitoring&lt;/a&gt; and &lt;a href=&#34;https://vividcortex.com/monitoring/postgres/&#34;&gt;PostgreSQL
performance management&lt;/a&gt; among many
other features.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Next up: actual template changes! More graphs!&lt;/p&gt;

&lt;p&gt;The changelog follows.&lt;/p&gt;

&lt;pre&gt;2009-10-24: version 1.1.3

        * This is a bug-fix release only, and contains no template changes.
        * To upgrade from the previous release, upgrade ss_get_mysql_stats.php.
        * MySQL 5.1 broke backwards compatibility with table_cache (issue 63).
        * Added a version number to the script (partial fix for issue 79).
        * Added a test suite (issue 76, issue 59).
        * Math operations were done in MySQL instead of PHP (issue 25).
        * SHOW STATUS values didn&#39;t override SHOW INNODB STATUS parsing (issue 24).
        * Long error messages were not appearing in the Cacti log.
        * SHOW INNODB STATUS parsing for unpurged_txns was broken.
        * SHOW INNODB STATUS parsing for innodb_lock_structs was broken.
        * SHOW INNODB STATUS parsing for pending_log_flushes was broken (issue 62).
        * SHOW INNODB STATUS parsing for pending_buf_pool_flushes was broken.
        * SHOW INNODB STATUS parsing for pending_ibuf_aio_reads was broken.
        * SHOW INNODB STATUS parsing for pending_aio_log_ios was broken.
        * SHOW INNODB STATUS parsing for pending_aio_sync_ios was broken.
        * Made SHOW INNODB STATUS parsing less sensitive to false positive matches.
&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>A tip when upgrading mysql-cacti-templates</title>
      <link>http://www.xaprb.com/blog/2009/10/15/a-tip-when-upgrading-mysql-cacti-templates/</link>
      <pubDate>Thu, 15 Oct 2009 00:00:00 UTC</pubDate>
      
      <guid>http://www.xaprb.com/blog/2009/10/15/a-tip-when-upgrading-mysql-cacti-templates/</guid>
      <description>&lt;p&gt;A client recently asked me to fix some Cacti graphs that had broken after upgrading &lt;a href=&#34;http://code.google.com/p/mysql-cacti-templates&#34;&gt;the Cacti templates I wrote for MySQL&lt;/a&gt;. The symptoms were weird; I&amp;rsquo;m not sure I understand fully what happened, but some of the graphs were OK and some had only part of the data they were supposed to. Some graphs would have one data element as usual, and others would be nan (not a number).&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://vividcortex.com/&#34;&gt;VividCortex&lt;/a&gt; is the startup I founded in 2012. It&amp;rsquo;s the easiest way to monitor what
your servers are doing in production and I consider it far superior to Cacti. VividCortex offers &lt;a href=&#34;https://vividcortex.com/monitoring/mysql/&#34;&gt;MySQL performance
monitoring&lt;/a&gt; and &lt;a href=&#34;https://vividcortex.com/monitoring/postgres/&#34;&gt;PostgreSQL
performance management&lt;/a&gt; among many
other features.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;After turning on the debug logs, I found that the script was returning the data correctly &amp;ndash; it was not a script problem. But after Cacti got the data from the script, it wasn&amp;rsquo;t associating it correctly with the RRD archives. Here&amp;rsquo;s a log message:&lt;/p&gt;

&lt;pre&gt;10/14/2009 12:05:05 PM - CMDPHP: Poller[0] Host[11] DS[1270] CMD: /usr/bin/php -q
  /opt/cacti/scripts/ss_get_mysql_stats.php --host dbserver
  --items bj,bm --user --pass , output: bj:68 bm:64
10/14/2009 12:05:05 PM - CMDPHP: Poller[0] DEVEL: SQL Exec: &#34;insert into poller_output
  (local_data_id, rrd_name, time, output) values
  (1270, &#39;&#39;, &#39;2009-10-14 12:05:03&#39;, &#39;bj:68 bm:64&#39;)&#34;&lt;/pre&gt;

&lt;p&gt;The suspicious thing here is that the rrd_name is blank in the INSERT statement. That shows me that Cacti is having trouble with something. A little more digging in the log, and I found&lt;/p&gt;

&lt;pre&gt;10/14/2009 12:05:06 PM - POLLER: Poller[0] CACTI2RRD: /usr/bin/rrdtool update
  /opt/cacti/rra/dbserver_thread_cache_size_1270.rrd
  --template Threads_created 1255547103:68&lt;/pre&gt;

&lt;p&gt;Here we see that Cacti is only updating the Threads_created item in the RRD file. It should be updating a couple of them. Indeed the graphs showed nan for thread_cache_size, as expected from this command.&lt;/p&gt;

&lt;p&gt;Next I found this SQL statement (all by searching for 1270 in the log, by the way):&lt;/p&gt;

&lt;pre&gt;select
     data_template_rrd.data_source_name,
     data_input_fields.data_name
     from (data_template_rrd,data_input_fields)
     where data_template_rrd.data_input_field_id=data_input_fields.id
     and data_template_rrd.local_data_id=1270&lt;/pre&gt;

&lt;p&gt;I executed this and found a result like this:&lt;/p&gt;

&lt;pre&gt;mysql&gt; select
    -&gt;      data_template_rrd.data_source_name,
    -&gt;      data_input_fields.data_name
    -&gt;      from (data_template_rrd,data_input_fields)
    -&gt;      where data_template_rrd.data_input_field_id=data_input_fields.id
    -&gt;      and data_template_rrd.local_data_id=1270;
+-------------------+--------------------------+
| data_source_name  | data_name                |
+-------------------+--------------------------+
| thread_cache_size | thread_cache_size        | 
| Threads_created   | bj                       | 
+-------------------+--------------------------+
&lt;/pre&gt;

&lt;p&gt;That&amp;rsquo;s not right &amp;ndash; the data_name for thread_cache_size should be &amp;ldquo;bm&amp;rdquo;. This is a &amp;ldquo;compression&amp;rdquo; tactic I employed a while ago to limit the size of the returned data, because Cacti has a silly buffer size limit that was truncating and discarding data from the script. So this server&amp;rsquo;s Cacti install seemed to have been upgraded from an older version of the templates, and not all of the data sources were updated correctly.&lt;/p&gt;

&lt;p&gt;The fix for this was to write a couple of custom scripts to find such occurrences in the log and update the database to have the correct two-letter data_name.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Version 1.1.2 of improved Cacti templates released</title>
      <link>http://www.xaprb.com/blog/2009/05/07/version-112-of-improved-cacti-templates-released/</link>
      <pubDate>Thu, 07 May 2009 00:00:00 UTC</pubDate>
      
      <guid>http://www.xaprb.com/blog/2009/05/07/version-112-of-improved-cacti-templates-released/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve packaged up and released version 1.1.2 of the &lt;a href=&#34;http://code.google.com/p/mysql-cacti-templates/&#34;&gt;Cacti templates I&amp;rsquo;ve written for MySQL, Apache, memcached, nginx etc&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://vividcortex.com/&#34;&gt;VividCortex&lt;/a&gt; is the startup I founded in 2012. It&amp;rsquo;s the easiest way to monitor what
your servers are doing in production and I consider it far superior to Cacti. VividCortex offers &lt;a href=&#34;https://vividcortex.com/monitoring/mysql/&#34;&gt;MySQL performance
monitoring&lt;/a&gt; and &lt;a href=&#34;https://vividcortex.com/monitoring/postgres/&#34;&gt;PostgreSQL
performance management&lt;/a&gt; among many
other features.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Anyone who would like to help write documentation (or do anything else, for that matter) is welcomed to participate. I&amp;rsquo;ll give commit access at the drop of a hat.&lt;/p&gt;

&lt;p&gt;Changelog:&lt;/p&gt;

&lt;pre&gt;2009-05-07: version 1.1.2

    * The parsing code did not handle InnoDB plugin / XtraDB (issue 52).
    * The servername was hardcoded in ss_get_by_ssh.php (issue 57).
    * Added Handler_ graphs (issue 47).
    * Config files can be used instead of editing the .php file (issue 39).
    * binary log space is now calculated without a MySQL query (issue 48).
    * There was no easy way to force inputs to be filled (issue 45).
    * Some graphs were partially hidden without --lower-limit (issue 43).
    * Flipped some elements across the Y axis (issue 42).
    * Added Apache, Nginx, and GNU/Linux templates.
    * Unknown output is now -1 instead of 0 to prevent spikes in graphs.
    * If you want to use a script server, you must now explicitly configure it.
    * UNIX sockets weren&#39;t permitted for MySQL (issue 38).
&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Secure, easy Cacti graphing without SNMP</title>
      <link>http://www.xaprb.com/blog/2009/04/25/secure-easy-cacti-graphing-without-snmp/</link>
      <pubDate>Sat, 25 Apr 2009 00:00:00 UTC</pubDate>
      
      <guid>http://www.xaprb.com/blog/2009/04/25/secure-easy-cacti-graphing-without-snmp/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.cacti.net/&#34;&gt;Cacti&lt;/a&gt; is a great tool for collecting information about systems and graphing it. However, it likes to use SNMP, and SNMP is often not desirable. Instead, I often see the need for a method that is:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Secure. Use trusted, well-known, encrypted communication. Do not open up new ports.&lt;/li&gt;
&lt;li&gt;Zero install on the monitored system.&lt;/li&gt;
&lt;li&gt;As little installation or modification on the monitoring system as possible.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Over the last several years, I&amp;rsquo;ve slowly created more and more software to create Cacti graphs via standard POSIX command-line utilities over SSH with key-pair authentication. (I&amp;rsquo;ve also created similar software for Nagios, but that&amp;rsquo;s another matter.) The major problem with the work I&amp;rsquo;ve done is that it&amp;rsquo;s totally un-publicized.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://vividcortex.com/&#34;&gt;VividCortex&lt;/a&gt; is the startup I founded in 2012. It&amp;rsquo;s the easiest way to monitor what
your servers are doing in production and I consider it far superior to Cacti. VividCortex offers &lt;a href=&#34;https://vividcortex.com/monitoring/mysql/&#34;&gt;MySQL performance
monitoring&lt;/a&gt; and &lt;a href=&#34;https://vividcortex.com/monitoring/postgres/&#34;&gt;PostgreSQL
performance management&lt;/a&gt; among many
other features.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The system works by passing command-line arguments to a local PHP script like any other Cacti script. This script then executes a remote SSH command, such as &lt;code&gt;ssh somehost uptime&lt;/code&gt; and extracts statistics from the result.&lt;/p&gt;

&lt;p&gt;The requirements are very simple. On the system to be monitored, a public key must be installed. On the monitoring system, the cacti user account must have a private SSH key that it can read and others can&amp;rsquo;t. This is standard for any SSH key. The cacti user account must also have the SSH key fingerprint of the monitored system in its known_hosts file.&lt;/p&gt;

&lt;p&gt;The work I&amp;rsquo;ve done thus far is available from Subversion in the &lt;a href=&#34;http://code.google.com/p/mysql-cacti-templates&#34;&gt;mysql-cacti-templates&lt;/a&gt; project. This project has the scaffolding for creating Cacti templates easily, so I&amp;rsquo;m using it.&lt;/p&gt;

&lt;p&gt;At this point, the following are available:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Apache&lt;/li&gt;
&lt;li&gt;Operating system (CPU, memory, load average, etc)&lt;/li&gt;
&lt;li&gt;Memcached&lt;/li&gt;
&lt;li&gt;Nginx&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Unfinished work includes network, disk, etc. The techniques to monitor something of which there is a variable number (e.g. there can be many disks, each of which needs its own graph) are a little more complex than simple things like monitoring overall CPU usage. So that&amp;rsquo;s a work in progress. Once it&amp;rsquo;s done, it&amp;rsquo;ll make it really easy to discover and monitor multiples of &lt;em&gt;anything&lt;/em&gt; &amp;ndash; for example, multiple MySQL servers or memcached servers on a single host &amp;ndash; without creating a new host for each resource to monitor.&lt;/p&gt;

&lt;p&gt;As with the MySQL templates I created, these templates are comprehensive and have lots of nice properties most templates lack. This is something you get free with my scaffolding. If you&amp;rsquo;ve ever created templates by hand through the web interface, you should give my work a try. You can turn a three-day project into a few minutes and avoid bugs and other hassles. There are &lt;a href=&#34;http://code.google.com/p/mysql-cacti-templates/wiki/CreatingGraphs&#34;&gt;instructions for creating Cacti templates&lt;/a&gt; on the project wiki.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>News on MySQL Cacti Templates</title>
      <link>http://www.xaprb.com/blog/2009/02/09/news-on-mysql-cacti-templates/</link>
      <pubDate>Mon, 09 Feb 2009 00:00:00 UTC</pubDate>
      
      <guid>http://www.xaprb.com/blog/2009/02/09/news-on-mysql-cacti-templates/</guid>
      <description>&lt;p&gt;It&amp;rsquo;s been a while since I&amp;rsquo;ve sent any news about the &lt;a href=&#34;http://code.google.com/p/mysql-cacti-templates/&#34;&gt;MySQL Cacti Templates&lt;/a&gt; project I started a while ago. Here&amp;rsquo;s what&amp;rsquo;s new:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://vividcortex.com/&#34;&gt;VividCortex&lt;/a&gt; is the startup I founded in 2012. It&amp;rsquo;s the easiest way to monitor what
your servers are doing in production and I consider it far superior to Cacti. VividCortex offers &lt;a href=&#34;https://vividcortex.com/monitoring/mysql/&#34;&gt;MySQL performance
monitoring&lt;/a&gt; and &lt;a href=&#34;https://vividcortex.com/monitoring/postgres/&#34;&gt;PostgreSQL
performance management&lt;/a&gt; among many
other features.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;First of all, it&amp;rsquo;s not just MySQL templates anymore. It&amp;rsquo;s a generic framework and tools for creating templates, and I&amp;rsquo;ve written templates for Apache, Memcached, etc. I just haven&amp;rsquo;t publicized it yet.&lt;/li&gt;
&lt;li&gt;Second, there&amp;rsquo;s a mailing list, &lt;a href=&#34;http://groups.google.com/group/better-cacti-templates&#34;&gt;http://groups.google.com/group/better-cacti-templates&lt;/a&gt; You see it&amp;rsquo;s called &amp;ldquo;better cacti templates&amp;rdquo; which is what I ought to have called the project to begin with :-) I hope you&amp;rsquo;ll use the mailing list instead of emailing me directly, for all the usual reasons.&lt;/li&gt;
&lt;li&gt;There are some open issues I cannot reproduce. I believe they&amp;rsquo;re problems, but I can&amp;rsquo;t solve them. Some of them make no sense to me; I don&amp;rsquo;t know why others are seeing behavior I&amp;rsquo;m not. However these &lt;em&gt;seem&lt;/em&gt; to be problems with Cacti, not problems with the templates. Anyone who wants commit access is welcomed to ask for it.&lt;/li&gt;
&lt;li&gt;Some people have been asking about Spine. I haven&amp;rsquo;t used it and none of my customers has asked me about it, so the short answer is &amp;ndash; if you want Spine support, don&amp;rsquo;t wait for it to happen for free; either contribute it yourself or pay someone (me?) to do it.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>